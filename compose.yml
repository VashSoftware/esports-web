services:
  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - webnet
    ports:
      - 9090:9090

  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - webnet
    restart: unless-stopped

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:0.9.0
    ports:
      - "9113:9113"
    environment:
      - NGINX_PLUS_STATUS_URL=http://nginx/nginx_status
    networks:
      - webnet
    depends_on:
      - nginx
    restart: unless-stopped

  # redis:
  #   image: redis
  #   volumes:
  #     - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  #   networks:
  #     - webnet
  #   ports:
  #     - 9090:9090

  web:
    build:
      context: ./web
      args:
        OSU_CLIENT_ID: ${OSU_CLIENT_ID}
        OSU_CLIENT_SECRET: ${OSU_CLIENT_SECRET}
        SUPABASE_URL: ${SUPABASE_URL}
        SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
        JWT_SECRET: ${JWT_SECRET}
        DISCORD_APPLICATION_ID: ${DISCORD_APPLICATION_ID}
        DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
    networks:
      - webnet
    environment:
      - PUBLIC_OSU_CLIENT_ID=${OSU_CLIENT_ID}
      - OSU_CLIENT_SECRET=${OSU_CLIENT_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - DISCORD_APPLICATION_ID=${DISCORD_APPLICATION_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
    ports:
      - "5173:5173"
    develop:
      watch:
        - path: ./web
          action: rebuild
    depends_on:
      - socket.io

  socket.io:
    build: ./realtime
    networks:
      - webnet
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3001:3001"
    develop:
      watch:
        - path: ./realtime
          action: rebuild

  osu-server:
    build: ./osu-server
    networks:
      - webnet
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OSU_USERNAME=${OSU_USERNAME}
      - OSU_API_KEY=${OSU_API_KEY}
      - OSU_IRC_KEY=${OSU_IRC_KEY}
      - OSU_CLIENT_ID=${OSU_CLIENT_ID}
      - OSU_CLIENT_SECRET=${OSU_CLIENT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - socket.io
    develop:
      watch:
        - path: ./osu-server
          action: rebuild

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./esports.conf:/etc/nginx/conf.d/esports.conf
      - ./nginx_logs:/var/log/nginx
      - /dev/null:/etc/nginx/conf.d/default.conf
    depends_on:
      - socket.io
      - osu-server
      - web
    networks:
      - webnet
    develop:
      watch:
        - path: ./nginx.conf
          action: sync+restart
          target: /etc/nginx/nginx.conf
        - path: ./esports.conf
          action: sync+restart
          target: /etc/nginx/conf.d/esports.conf

  minecraft-hub:
    build: ./minecraft/hub
    ports:
      - "25565:25565"
    networks:
      - webnet
    develop:
      watch:
        - path: ./minecraft/hub
          action: rebuild
    volumes:
      - ./minecraft/hub/plugins:/server/plugins
      - ./minecraft/hub/world:/server/world
      - ./minecraft/hub/server.properties:/server/server.properties
      - ./minecraft/hub/world_nether:/server/world_nether
      - ./minecraft/hub/world_the_end:/server/world_the_end
      - ./minecraft/hub/permissions.yml:/server/permissions.yml

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=VashElasticPassword
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - webnet
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - 5000:5000
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
    networks:
      - webnet
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=VashElasticPassword
    networks:
      - webnet
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.7.0
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    networks:
      - webnet
    depends_on:
      - logstash
    restart: unless-stopped

networks:
  webnet:
    driver: bridge
