
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA IF NOT EXISTS "public";

ALTER SCHEMA "public" OWNER TO "pg_database_owner";

CREATE TYPE "public"."Ranks" AS ENUM (
    'F',
    'D',
    'C',
    'B',
    'A',
    'S',
    'SH',
    'SS',
    'X'
);

ALTER TYPE "public"."Ranks" OWNER TO "postgres";

CREATE TYPE "public"."event_status" AS ENUM (
    'draft',
    'published',
    'playing',
    'finished',
    'paused',
    'cancelled'
);

ALTER TYPE "public"."event_status" OWNER TO "postgres";

CREATE TYPE "public"."match_map_status" AS ENUM (
    'waiting',
    'playing',
    'aborted',
    'finished'
);

ALTER TYPE "public"."match_map_status" OWNER TO "postgres";

CREATE TYPE "public"."match_types" AS ENUM (
    'event',
    'quick'
);

ALTER TYPE "public"."match_types" OWNER TO "postgres";

CREATE TYPE "public"."notification_types" AS ENUM (
    'match_invite',
    'event_invite',
    'team_invite',
    'message'
);

ALTER TYPE "public"."notification_types" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."badges" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "event_id" bigint,
    "name" "text" NOT NULL,
    "osu_id" "text"
);

ALTER TABLE "public"."badges" OWNER TO "postgres";

ALTER TABLE "public"."badges" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."badges_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."organisation_followers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "follower_user_id" bigint NOT NULL,
    "organisation_id" bigint NOT NULL
);

ALTER TABLE "public"."organisation_followers" OWNER TO "postgres";

ALTER TABLE "public"."organisation_followers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_followers_duplicate_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."event_groups" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "organisation_id" bigint,
    "name" "text"
);

ALTER TABLE "public"."event_groups" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."event_links" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "event_id" bigint NOT NULL,
    "platform_id" bigint NOT NULL,
    "link_param" "text"
);

ALTER TABLE "public"."event_links" OWNER TO "postgres";

ALTER TABLE "public"."event_links" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_links_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."event_options" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "max_registrations" smallint,
    "max_players" smallint,
    "lower_rank_limit" integer,
    "upper_rank_limit" integer,
    "bws_formula_id" smallint
);

ALTER TABLE "public"."event_options" OWNER TO "postgres";

ALTER TABLE "public"."event_options" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_options_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."event_groups" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_series_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."event_statuses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "status" "text" NOT NULL,
    "emoji" "text"
);

ALTER TABLE "public"."event_statuses" OWNER TO "postgres";

ALTER TABLE "public"."event_statuses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_statuses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."events" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "game_id" bigint,
    "organisation_id" bigint,
    "event_options_id" bigint,
    "event_status_id" bigint,
    "event_group_id" bigint,
    "description" "text",
    "quick_event" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."events" OWNER TO "postgres";

ALTER TABLE "public"."events" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."events_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_followers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "follower_user_id" bigint NOT NULL,
    "followee_user_id" bigint NOT NULL
);

ALTER TABLE "public"."user_followers" OWNER TO "postgres";

ALTER TABLE "public"."user_followers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."follows_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."games" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text"
);

ALTER TABLE "public"."games" OWNER TO "postgres";

ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."games_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."maps" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "osu_id" integer NOT NULL,
    "mapset_id" bigint NOT NULL,
    "star_rating" real,
    "difficulty_name" "text",
    "mapper_name" "text",
    "approach_rate" real,
    "circle_size" real,
    "overall_difficulty" real,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."maps" OWNER TO "postgres";

ALTER TABLE "public"."maps" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."map_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."map_pools" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "description" "text",
    "name" "text",
    "deleted_at" timestamp with time zone,
    "round_id" bigint
);

ALTER TABLE "public"."map_pools" OWNER TO "postgres";

ALTER TABLE "public"."map_pools" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."map_pool_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."map_pool_map_mods" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "map_pool_map_id" bigint NOT NULL,
    "mod_id" bigint NOT NULL
);

ALTER TABLE "public"."map_pool_map_mods" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."map_pool_maps" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "map_pool_id" bigint NOT NULL,
    "map_id" bigint,
    "notes" "text",
    "mod_priority" smallint NOT NULL
);

ALTER TABLE "public"."map_pool_maps" OWNER TO "postgres";

ALTER TABLE "public"."map_pool_maps" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."map_pool_maps_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."map_pool_map_mods" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."map_pool_mods_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."mapsets" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "osu_id" integer NOT NULL,
    "artist" "text",
    "title" "text",
    "bpm" real,
    "time" integer,
    "creator" "text"
);

ALTER TABLE "public"."mapsets" OWNER TO "postgres";

ALTER TABLE "public"."mapsets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."mapsets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_bans" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_id" bigint NOT NULL,
    "map_pool_map_id" bigint,
    "time_limit" timestamp with time zone,
    "ban_time" timestamp with time zone,
    "match_participant_id" bigint
);

ALTER TABLE "public"."match_bans" OWNER TO "postgres";

ALTER TABLE "public"."match_bans" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_bans_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_calendar_events" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."match_calendar_events" OWNER TO "postgres";

ALTER TABLE "public"."match_calendar_events" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_calendar_events_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_invites" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "accepted_at" timestamp with time zone,
    "sender_id" bigint NOT NULL,
    "pool_id" bigint NOT NULL,
    "best_of" smallint DEFAULT '7'::smallint NOT NULL,
    "notification_id" bigint
);

ALTER TABLE "public"."match_invites" OWNER TO "postgres";

ALTER TABLE "public"."match_invites" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_invites_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_maps" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_id" bigint NOT NULL,
    "map_pool_map_id" bigint NOT NULL,
    "status" "public"."match_map_status" NOT NULL,
    "picked_by" bigint NOT NULL
);

ALTER TABLE "public"."match_maps" OWNER TO "postgres";

ALTER TABLE "public"."match_maps" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_maps_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_participant_players" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_participant_id" bigint,
    "team_member" bigint,
    "state" bigint NOT NULL
);

ALTER TABLE "public"."match_participant_players" OWNER TO "postgres";

ALTER TABLE "public"."match_participant_players" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_participant_player_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_participant_player_states" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "emoji" "text"
);

ALTER TABLE "public"."match_participant_player_states" OWNER TO "postgres";

ALTER TABLE "public"."match_participant_player_states" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_participant_player_states_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_participants" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_id" bigint NOT NULL,
    "participant_id" bigint,
    "roll" smallint,
    "surrendered_bans" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."match_participants" OWNER TO "postgres";

ALTER TABLE "public"."match_participants" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_participants_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."match_predictions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_id" bigint,
    "winning_participant_id" bigint,
    "user_id" bigint NOT NULL
);

ALTER TABLE "public"."match_predictions" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."match_queue" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_id" bigint NOT NULL,
    "position" smallint
);

ALTER TABLE "public"."match_queue" OWNER TO "postgres";

ALTER TABLE "public"."match_queue" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_queue_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."match_predictions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."match_winner_votes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."matches" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "round_id" bigint,
    "ongoing" boolean DEFAULT false NOT NULL,
    "winner_participant_id" bigint,
    "start_time" timestamp with time zone,
    "is_losers_match" boolean,
    "next_match_id" bigint,
    "next_losers_match_id" bigint,
    "lobby_id" "text",
    "type" "public"."match_types" DEFAULT 'quick'::"public"."match_types" NOT NULL,
    "map_pool_id" bigint,
    "tiebreaker" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."matches" OWNER TO "postgres";

ALTER TABLE "public"."matches" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."matches_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."messages" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint NOT NULL,
    "body" "text"
);

ALTER TABLE "public"."messages" OWNER TO "postgres";

ALTER TABLE "public"."messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."mods" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "description" "text",
    "code" "text",
    "order_no" smallint DEFAULT '1'::smallint NOT NULL,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."mods" OWNER TO "postgres";

ALTER TABLE "public"."mods" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."mods_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."notifications" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint NOT NULL,
    "dismissed_at" timestamp with time zone,
    "title" "text",
    "body" "text",
    "type" "public"."notification_types" DEFAULT 'message'::"public"."notification_types" NOT NULL,
    "href" "text"
);

ALTER TABLE "public"."notifications" OWNER TO "postgres";

ALTER TABLE "public"."notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."notification_recipient_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."organisation_member_roles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "organisation_member_id" bigint NOT NULL,
    "organisation_role_id" bigint,
    "custom_role_name" "text"
);

ALTER TABLE "public"."organisation_member_roles" OWNER TO "postgres";

ALTER TABLE "public"."organisation_member_roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."organisation_member_role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."organisation_members" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "organisation_id" bigint,
    "user_id" bigint
);

ALTER TABLE "public"."organisation_members" OWNER TO "postgres";

ALTER TABLE "public"."organisation_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."organisation_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."organisation_roles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL
);

ALTER TABLE "public"."organisation_roles" OWNER TO "postgres";

ALTER TABLE "public"."organisation_roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."organisation_role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."organisations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text"
);

ALTER TABLE "public"."organisations" OWNER TO "postgres";

ALTER TABLE "public"."organisations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."organisations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."participant_disqualification" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "participant_id" bigint,
    "reason" "text"
);

ALTER TABLE "public"."participant_disqualification" OWNER TO "postgres";

ALTER TABLE "public"."participant_disqualification" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."participant_disqualification_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."participants" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "team_id" bigint NOT NULL,
    "event_id" bigint NOT NULL,
    "disqualified_at" timestamp with time zone
);

ALTER TABLE "public"."participants" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."pinned_scores" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint,
    "score_id" bigint,
    "index" real DEFAULT '1'::real NOT NULL
);

ALTER TABLE "public"."pinned_scores" OWNER TO "postgres";

ALTER TABLE "public"."pinned_scores" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pinned_scores_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."platforms" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "url" "text"
);

ALTER TABLE "public"."platforms" OWNER TO "postgres";

ALTER TABLE "public"."platforms" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."platforms_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_prizes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint NOT NULL,
    "name" "text" NOT NULL
);

ALTER TABLE "public"."user_prizes" OWNER TO "postgres";

ALTER TABLE "public"."user_prizes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."prizes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."purchases" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint NOT NULL
);

ALTER TABLE "public"."purchases" OWNER TO "postgres";

ALTER TABLE "public"."purchases" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."purchases_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_ratings" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint NOT NULL,
    "rating" integer
);

ALTER TABLE "public"."user_ratings" OWNER TO "postgres";

ALTER TABLE "public"."user_ratings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ratings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."participants" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."registration_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."rounds" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "event_id" bigint NOT NULL,
    "name" "text" DEFAULT 'Grand Finals'::"text",
    "best_of" smallint DEFAULT '13'::smallint,
    "bans_per_match_participant" integer DEFAULT 2
);

ALTER TABLE "public"."rounds" OWNER TO "postgres";

ALTER TABLE "public"."rounds" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."rounds_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."scores" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "match_map_id" bigint NOT NULL,
    "match_participant_player_id" bigint NOT NULL,
    "score" integer DEFAULT 0 NOT NULL,
    "rank" "public"."Ranks",
    "failed" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."scores" OWNER TO "postgres";

ALTER TABLE "public"."scores" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."scores_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."spectators" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint,
    "match_id" bigint,
    "stopped_at" timestamp with time zone
);

ALTER TABLE "public"."spectators" OWNER TO "postgres";

ALTER TABLE "public"."spectators" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."spectator_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."team_members" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "team_id" bigint NOT NULL,
    "user_id" bigint NOT NULL
);

ALTER TABLE "public"."team_members" OWNER TO "postgres";

ALTER TABLE "public"."team_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."team_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."teams" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "is_personal_team" boolean NOT NULL,
    "bio" "text",
    "country_code" "text",
    "picture_url" "text" DEFAULT 'https://mdixwlzweijevgjmcsmt.supabase.co/storage/v1/object/public/team_icons/default'::"text" NOT NULL,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."teams" OWNER TO "postgres";

ALTER TABLE "public"."teams" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."teams_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_badges" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint,
    "badge_id" bigint
);

ALTER TABLE "public"."user_badges" OWNER TO "postgres";

ALTER TABLE "public"."user_badges" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_badges_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_platforms" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint,
    "platform_id" bigint,
    "value" "text"
);

ALTER TABLE "public"."user_platforms" OWNER TO "postgres";

ALTER TABLE "public"."user_platforms" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_platforms_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_profiles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "user_id" "uuid" NOT NULL,
    "country_code" "text",
    picture_url text not null default 'https://mdixwlzweijevgjmcsmt.supabase.co/storage/v1/object/public/user_pictures/default'::text,
    "finished_setup" boolean DEFAULT false NOT NULL,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."user_profiles" OWNER TO "postgres";

ALTER TABLE "public"."user_profiles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_profiles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."badges"
    ADD CONSTRAINT "badges_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."organisation_followers"
    ADD CONSTRAINT "event_followers_duplicate_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."event_links"
    ADD CONSTRAINT "event_links_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."event_options"
    ADD CONSTRAINT "event_options_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."event_groups"
    ADD CONSTRAINT "event_series_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."event_statuses"
    ADD CONSTRAINT "event_statuses_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_followers"
    ADD CONSTRAINT "follows_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."maps"
    ADD CONSTRAINT "map_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."map_pool_maps"
    ADD CONSTRAINT "map_pool_maps_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."map_pool_map_mods"
    ADD CONSTRAINT "map_pool_mods_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."map_pools"
    ADD CONSTRAINT "map_pool_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."maps"
    ADD CONSTRAINT "maps_osu_id_key" UNIQUE ("osu_id");

ALTER TABLE ONLY "public"."mapsets"
    ADD CONSTRAINT "mapsets_osu_id_key" UNIQUE ("osu_id");

ALTER TABLE ONLY "public"."mapsets"
    ADD CONSTRAINT "mapsets_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_bans"
    ADD CONSTRAINT "match_bans_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_calendar_events"
    ADD CONSTRAINT "match_calendar_events_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_invites"
    ADD CONSTRAINT "match_invites_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_maps"
    ADD CONSTRAINT "match_maps_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_participant_players"
    ADD CONSTRAINT "match_participant_player_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_participant_player_states"
    ADD CONSTRAINT "match_participant_player_states_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_participants"
    ADD CONSTRAINT "match_participants_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_queue"
    ADD CONSTRAINT "match_queue_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."match_queue"
    ADD CONSTRAINT "match_queue_position_key" UNIQUE ("position");

ALTER TABLE ONLY "public"."match_predictions"
    ADD CONSTRAINT "match_winner_votes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."messages"
    ADD CONSTRAINT "messages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."mods"
    ADD CONSTRAINT "mods_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."notifications"
    ADD CONSTRAINT "notification_recipient_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."organisation_member_roles"
    ADD CONSTRAINT "organisation_member_role_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."organisation_members"
    ADD CONSTRAINT "organisation_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."organisation_roles"
    ADD CONSTRAINT "organisation_role_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."organisations"
    ADD CONSTRAINT "organisations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."participant_disqualification"
    ADD CONSTRAINT "participant_disqualification_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."pinned_scores"
    ADD CONSTRAINT "pinned_scores_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."platforms"
    ADD CONSTRAINT "platforms_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_prizes"
    ADD CONSTRAINT "prizes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."purchases"
    ADD CONSTRAINT "purchases_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_ratings"
    ADD CONSTRAINT "ratings_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."participants"
    ADD CONSTRAINT "registration_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."rounds"
    ADD CONSTRAINT "rounds_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."scores"
    ADD CONSTRAINT "scores_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."spectators"
    ADD CONSTRAINT "spectator_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."team_members"
    ADD CONSTRAINT "team_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."teams"
    ADD CONSTRAINT "teams_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."teams"
    ADD CONSTRAINT "unique_name_personal_team" UNIQUE ("name", "is_personal_team");

ALTER TABLE ONLY "public"."user_platforms"
    ADD CONSTRAINT "unique_user_platform" UNIQUE ("user_id", "platform_id");

ALTER TABLE ONLY "public"."team_members"
    ADD CONSTRAINT "unique_user_team" UNIQUE ("user_id", "team_id");

ALTER TABLE ONLY "public"."user_badges"
    ADD CONSTRAINT "user_badges_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_platforms"
    ADD CONSTRAINT "user_platforms_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_platforms"
    ADD CONSTRAINT "user_platforms_user_id_platform_id_key" UNIQUE ("user_id", "platform_id");

ALTER TABLE ONLY "public"."user_profiles"
    ADD CONSTRAINT "user_profiles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_profiles"
    ADD CONSTRAINT "user_profiles_user_id_key" UNIQUE ("user_id");

ALTER TABLE ONLY "public"."badges"
    ADD CONSTRAINT "badges_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."events"("id");

ALTER TABLE ONLY "public"."event_links"
    ADD CONSTRAINT "event_links_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."events"("id");

ALTER TABLE ONLY "public"."event_links"
    ADD CONSTRAINT "event_links_platform_id_fkey" FOREIGN KEY ("platform_id") REFERENCES "public"."platforms"("id");

ALTER TABLE ONLY "public"."event_groups"
    ADD CONSTRAINT "event_series_organisation_id_fkey" FOREIGN KEY ("organisation_id") REFERENCES "public"."organisations"("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_event_options_id_fkey" FOREIGN KEY ("event_options_id") REFERENCES "public"."event_options"("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_event_serie_fkey" FOREIGN KEY ("event_group_id") REFERENCES "public"."event_groups"("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_event_status_id_fkey" FOREIGN KEY ("event_status_id") REFERENCES "public"."event_statuses"("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."games"("id");

ALTER TABLE ONLY "public"."events"
    ADD CONSTRAINT "events_organisation_id_fkey" FOREIGN KEY ("organisation_id") REFERENCES "public"."organisations"("id");

ALTER TABLE ONLY "public"."map_pool_map_mods"
    ADD CONSTRAINT "map_pool_map_mod_map_pool_map_id_fkey" FOREIGN KEY ("map_pool_map_id") REFERENCES "public"."map_pool_maps"("id");

ALTER TABLE ONLY "public"."map_pool_map_mods"
    ADD CONSTRAINT "map_pool_map_mod_mod_id_fkey" FOREIGN KEY ("mod_id") REFERENCES "public"."mods"("id");

ALTER TABLE ONLY "public"."map_pool_maps"
    ADD CONSTRAINT "map_pool_maps_map_id_fkey" FOREIGN KEY ("map_id") REFERENCES "public"."maps"("id");

ALTER TABLE ONLY "public"."map_pool_maps"
    ADD CONSTRAINT "map_pool_maps_map_pool_id_fkey" FOREIGN KEY ("map_pool_id") REFERENCES "public"."map_pools"("id");

ALTER TABLE ONLY "public"."map_pools"
    ADD CONSTRAINT "map_pools_round_id_fkey" FOREIGN KEY ("round_id") REFERENCES "public"."rounds"("id");

ALTER TABLE ONLY "public"."maps"
    ADD CONSTRAINT "maps_mapset_id_fkey" FOREIGN KEY ("mapset_id") REFERENCES "public"."mapsets"("id");

ALTER TABLE ONLY "public"."match_invites"
    ADD CONSTRAINT "match_invites_notification_id_fkey" FOREIGN KEY ("notification_id") REFERENCES "public"."notifications"("id");

ALTER TABLE ONLY "public"."match_invites"
    ADD CONSTRAINT "match_invites_pool_id_fkey" FOREIGN KEY ("pool_id") REFERENCES "public"."map_pools"("id");

ALTER TABLE ONLY "public"."match_invites"
    ADD CONSTRAINT "match_invites_sender_id_fkey" FOREIGN KEY ("sender_id") REFERENCES "public"."teams"("id");

ALTER TABLE ONLY "public"."match_maps"
    ADD CONSTRAINT "match_maps_map_pool_map_id_fkey" FOREIGN KEY ("map_pool_map_id") REFERENCES "public"."map_pool_maps"("id");

ALTER TABLE ONLY "public"."match_maps"
    ADD CONSTRAINT "match_maps_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."match_maps"
    ADD CONSTRAINT "match_maps_picked_by_fkey" FOREIGN KEY ("picked_by") REFERENCES "public"."match_participants"("id");

ALTER TABLE ONLY "public"."match_participant_players"
    ADD CONSTRAINT "match_participant_players_match_participant_id_fkey" FOREIGN KEY ("match_participant_id") REFERENCES "public"."match_participants"("id");

ALTER TABLE ONLY "public"."match_participant_players"
    ADD CONSTRAINT "match_participant_players_state_fkey" FOREIGN KEY ("state") REFERENCES "public"."match_participant_player_states"("id");

ALTER TABLE ONLY "public"."match_participant_players"
    ADD CONSTRAINT "match_participant_players_team_member_fkey" FOREIGN KEY ("team_member") REFERENCES "public"."team_members"("id");

ALTER TABLE ONLY "public"."match_participants"
    ADD CONSTRAINT "match_participants_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."match_participants"
    ADD CONSTRAINT "match_participants_participant_id_fkey" FOREIGN KEY ("participant_id") REFERENCES "public"."participants"("id");

ALTER TABLE ONLY "public"."match_predictions"
    ADD CONSTRAINT "match_predictions_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."match_predictions"
    ADD CONSTRAINT "match_predictions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."match_predictions"
    ADD CONSTRAINT "match_predictions_winning_participant_id_fkey" FOREIGN KEY ("winning_participant_id") REFERENCES "public"."participants"("id");

ALTER TABLE ONLY "public"."match_queue"
    ADD CONSTRAINT "match_queue_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_map_pool_id_fkey" FOREIGN KEY ("map_pool_id") REFERENCES "public"."map_pools"("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_next_losers_match_id_fkey" FOREIGN KEY ("next_losers_match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_next_match_id_fkey" FOREIGN KEY ("next_match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_round_id_fkey" FOREIGN KEY ("round_id") REFERENCES "public"."rounds"("id");

ALTER TABLE ONLY "public"."matches"
    ADD CONSTRAINT "matches_winner_participant_id_fkey" FOREIGN KEY ("winner_participant_id") REFERENCES "public"."participants"("id");

ALTER TABLE ONLY "public"."messages"
    ADD CONSTRAINT "messages_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."organisation_followers"
    ADD CONSTRAINT "organisation_followers_follower_user_id_fkey" FOREIGN KEY ("follower_user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."organisation_followers"
    ADD CONSTRAINT "organisation_followers_organisation_id_fkey" FOREIGN KEY ("organisation_id") REFERENCES "public"."organisations"("id");

ALTER TABLE ONLY "public"."organisation_member_roles"
    ADD CONSTRAINT "organisation_member_role_organisation_member_id_fkey" FOREIGN KEY ("organisation_member_id") REFERENCES "public"."organisation_members"("id");

ALTER TABLE ONLY "public"."organisation_member_roles"
    ADD CONSTRAINT "organisation_member_role_organisation_staff_role_id_fkey" FOREIGN KEY ("organisation_role_id") REFERENCES "public"."organisation_roles"("id");

ALTER TABLE ONLY "public"."organisation_members"
    ADD CONSTRAINT "organisation_members_organisation_id_fkey" FOREIGN KEY ("organisation_id") REFERENCES "public"."organisations"("id");

ALTER TABLE ONLY "public"."organisation_members"
    ADD CONSTRAINT "organisation_members_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."participants"
    ADD CONSTRAINT "participants_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."events"("id");

ALTER TABLE ONLY "public"."participants"
    ADD CONSTRAINT "participants_team_id_fkey" FOREIGN KEY ("team_id") REFERENCES "public"."teams"("id");

ALTER TABLE ONLY "public"."pinned_scores"
    ADD CONSTRAINT "pinned_scores_score_id_fkey" FOREIGN KEY ("score_id") REFERENCES "public"."scores"("id");

ALTER TABLE ONLY "public"."pinned_scores"
    ADD CONSTRAINT "pinned_scores_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."match_bans"
    ADD CONSTRAINT "public_match_bans_map_pool_map_id_fkey" FOREIGN KEY ("map_pool_map_id") REFERENCES "public"."map_pool_maps"("id");

ALTER TABLE ONLY "public"."match_bans"
    ADD CONSTRAINT "public_match_bans_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."match_bans"
    ADD CONSTRAINT "public_match_bans_match_participant_id_fkey" FOREIGN KEY ("match_participant_id") REFERENCES "public"."match_participants"("id");

ALTER TABLE ONLY "public"."notifications"
    ADD CONSTRAINT "public_notification_recipient_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."participant_disqualification"
    ADD CONSTRAINT "public_participant_disqualification_participant_id_fkey" FOREIGN KEY ("participant_id") REFERENCES "public"."participants"("id");

ALTER TABLE ONLY "public"."purchases"
    ADD CONSTRAINT "purchases_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."rounds"
    ADD CONSTRAINT "rounds_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."events"("id");

ALTER TABLE ONLY "public"."scores"
    ADD CONSTRAINT "scores_match_map_id_fkey" FOREIGN KEY ("match_map_id") REFERENCES "public"."match_maps"("id");

ALTER TABLE ONLY "public"."scores"
    ADD CONSTRAINT "scores_match_participant_player_id_fkey" FOREIGN KEY ("match_participant_player_id") REFERENCES "public"."match_participant_players"("id");

ALTER TABLE ONLY "public"."spectators"
    ADD CONSTRAINT "spectators_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "public"."matches"("id");

ALTER TABLE ONLY "public"."spectators"
    ADD CONSTRAINT "spectators_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."team_members"
    ADD CONSTRAINT "team_members_team_id_fkey" FOREIGN KEY ("team_id") REFERENCES "public"."teams"("id");

ALTER TABLE ONLY "public"."team_members"
    ADD CONSTRAINT "team_members_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."user_badges"
    ADD CONSTRAINT "user_badges_badge_id_fkey" FOREIGN KEY ("badge_id") REFERENCES "public"."badges"("id");

ALTER TABLE ONLY "public"."user_badges"
    ADD CONSTRAINT "user_badges_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."user_followers"
    ADD CONSTRAINT "user_followers_followee_user_id_fkey" FOREIGN KEY ("followee_user_id") REFERENCES "public"."user_followers"("id");

ALTER TABLE ONLY "public"."user_followers"
    ADD CONSTRAINT "user_followers_follower_user_id_fkey" FOREIGN KEY ("follower_user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."user_platforms"
    ADD CONSTRAINT "user_platforms_platform_id_fkey" FOREIGN KEY ("platform_id") REFERENCES "public"."platforms"("id");

ALTER TABLE ONLY "public"."user_platforms"
    ADD CONSTRAINT "user_platforms_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."user_prizes"
    ADD CONSTRAINT "user_prizes_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

ALTER TABLE ONLY "public"."user_profiles"
    ADD CONSTRAINT "user_profiles_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."user_ratings"
    ADD CONSTRAINT "user_ratings_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id");

CREATE POLICY "Auth can delete" ON "public"."event_groups" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Auth can delete" ON "public"."map_pool_maps" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Auth can select" ON "public"."participant_disqualification" FOR SELECT TO "anon" USING (true);

CREATE POLICY "Auth can update" ON "public"."map_pool_maps" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Auth can update" ON "public"."notifications" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Auth can update" ON "public"."participants" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Authenticated can insert" ON "public"."map_pools" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Authenticated can update" ON "public"."map_pools" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."map_pool_map_mods" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."match_maps" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."match_queue" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."rounds" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."scores" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable insert for all ausers" ON "public"."events" FOR INSERT WITH CHECK (true);

CREATE POLICY "Enable insert for all users" ON "public"."user_profiles" FOR INSERT WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."event_groups" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."event_options" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."map_pool_map_mods" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."map_pool_maps" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."maps" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."mapsets" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_bans" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_calendar_events" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_invites" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_maps" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_participant_players" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_participants" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_predictions" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."match_queue" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."matches" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."mods" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."notifications" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."participant_disqualification" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."participants" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."rounds" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."scores" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."team_members" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."teams" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."user_platforms" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."badges" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."event_groups" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."event_links" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."event_options" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."event_statuses" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."events" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."games" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."map_pool_map_mods" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."map_pool_maps" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."map_pools" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."maps" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."mapsets" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_bans" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_calendar_events" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_maps" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_participant_player_states" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_participant_players" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_participants" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_predictions" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."match_queue" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."matches" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."mods" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."notifications" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."organisation_followers" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."organisation_member_roles" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."organisation_members" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."organisation_roles" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."organisations" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."participants" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."platforms" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."rounds" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."scores" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."spectators" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."team_members" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."teams" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."user_badges" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."user_followers" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."user_platforms" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."user_ratings" FOR SELECT USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."match_invites" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."match_bans" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."match_maps" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."match_participant_players" FOR UPDATE USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."match_participants" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."matches" FOR UPDATE USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."rounds" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."scores" FOR UPDATE USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."team_members" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."teams" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."user_platforms" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."user_profiles" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Read for everyone" ON "public"."user_profiles" FOR SELECT USING (true);

ALTER TABLE "public"."badges" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."event_groups" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."event_links" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."event_options" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."event_statuses" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."events" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."games" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."map_pool_map_mods" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."map_pool_maps" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."map_pools" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."maps" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."mapsets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_bans" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_calendar_events" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_invites" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_maps" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_participant_player_states" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_participant_players" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_participants" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_predictions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."match_queue" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."matches" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."messages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."mods" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."notifications" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."organisation_followers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."organisation_member_roles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."organisation_members" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."organisation_roles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."organisations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."participant_disqualification" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."participants" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."pinned_scores" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."platforms" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."purchases" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."rounds" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."scores" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."spectators" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."team_members" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."teams" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_badges" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_followers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_platforms" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_prizes" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_profiles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_ratings" ENABLE ROW LEVEL SECURITY;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."badges" TO "anon";
GRANT ALL ON TABLE "public"."badges" TO "authenticated";
GRANT ALL ON TABLE "public"."badges" TO "service_role";

GRANT ALL ON SEQUENCE "public"."badges_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."badges_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."badges_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."organisation_followers" TO "anon";
GRANT ALL ON TABLE "public"."organisation_followers" TO "authenticated";
GRANT ALL ON TABLE "public"."organisation_followers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_followers_duplicate_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_followers_duplicate_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_followers_duplicate_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."event_groups" TO "anon";
GRANT ALL ON TABLE "public"."event_groups" TO "authenticated";
GRANT ALL ON TABLE "public"."event_groups" TO "service_role";

GRANT ALL ON TABLE "public"."event_links" TO "anon";
GRANT ALL ON TABLE "public"."event_links" TO "authenticated";
GRANT ALL ON TABLE "public"."event_links" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_links_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_links_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_links_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."event_options" TO "anon";
GRANT ALL ON TABLE "public"."event_options" TO "authenticated";
GRANT ALL ON TABLE "public"."event_options" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_options_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_options_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_options_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_series_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_series_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_series_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."event_statuses" TO "anon";
GRANT ALL ON TABLE "public"."event_statuses" TO "authenticated";
GRANT ALL ON TABLE "public"."event_statuses" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_statuses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_statuses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_statuses_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."events" TO "anon";
GRANT ALL ON TABLE "public"."events" TO "authenticated";
GRANT ALL ON TABLE "public"."events" TO "service_role";

GRANT ALL ON SEQUENCE "public"."events_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."events_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."events_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_followers" TO "anon";
GRANT ALL ON TABLE "public"."user_followers" TO "authenticated";
GRANT ALL ON TABLE "public"."user_followers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."follows_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."follows_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."follows_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";

GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."maps" TO "anon";
GRANT ALL ON TABLE "public"."maps" TO "authenticated";
GRANT ALL ON TABLE "public"."maps" TO "service_role";

GRANT ALL ON SEQUENCE "public"."map_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."map_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."map_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."map_pools" TO "anon";
GRANT ALL ON TABLE "public"."map_pools" TO "authenticated";
GRANT ALL ON TABLE "public"."map_pools" TO "service_role";

GRANT ALL ON SEQUENCE "public"."map_pool_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."map_pool_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."map_pool_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."map_pool_map_mods" TO "anon";
GRANT ALL ON TABLE "public"."map_pool_map_mods" TO "authenticated";
GRANT ALL ON TABLE "public"."map_pool_map_mods" TO "service_role";

GRANT ALL ON TABLE "public"."map_pool_maps" TO "anon";
GRANT ALL ON TABLE "public"."map_pool_maps" TO "authenticated";
GRANT ALL ON TABLE "public"."map_pool_maps" TO "service_role";

GRANT ALL ON SEQUENCE "public"."map_pool_maps_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."map_pool_maps_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."map_pool_maps_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."map_pool_mods_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."map_pool_mods_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."map_pool_mods_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."mapsets" TO "anon";
GRANT ALL ON TABLE "public"."mapsets" TO "authenticated";
GRANT ALL ON TABLE "public"."mapsets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."mapsets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."mapsets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."mapsets_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_bans" TO "anon";
GRANT ALL ON TABLE "public"."match_bans" TO "authenticated";
GRANT ALL ON TABLE "public"."match_bans" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_bans_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_bans_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_bans_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_calendar_events" TO "anon";
GRANT ALL ON TABLE "public"."match_calendar_events" TO "authenticated";
GRANT ALL ON TABLE "public"."match_calendar_events" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_calendar_events_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_calendar_events_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_calendar_events_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_invites" TO "anon";
GRANT ALL ON TABLE "public"."match_invites" TO "authenticated";
GRANT ALL ON TABLE "public"."match_invites" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_invites_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_invites_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_invites_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_maps" TO "anon";
GRANT ALL ON TABLE "public"."match_maps" TO "authenticated";
GRANT ALL ON TABLE "public"."match_maps" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_maps_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_maps_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_maps_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_participant_players" TO "anon";
GRANT ALL ON TABLE "public"."match_participant_players" TO "authenticated";
GRANT ALL ON TABLE "public"."match_participant_players" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_participant_player_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_participant_player_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_participant_player_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_participant_player_states" TO "anon";
GRANT ALL ON TABLE "public"."match_participant_player_states" TO "authenticated";
GRANT ALL ON TABLE "public"."match_participant_player_states" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_participant_player_states_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_participant_player_states_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_participant_player_states_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_participants" TO "anon";
GRANT ALL ON TABLE "public"."match_participants" TO "authenticated";
GRANT ALL ON TABLE "public"."match_participants" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_participants_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_participants_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_participants_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."match_predictions" TO "anon";
GRANT ALL ON TABLE "public"."match_predictions" TO "authenticated";
GRANT ALL ON TABLE "public"."match_predictions" TO "service_role";

GRANT ALL ON TABLE "public"."match_queue" TO "anon";
GRANT ALL ON TABLE "public"."match_queue" TO "authenticated";
GRANT ALL ON TABLE "public"."match_queue" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_queue_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_queue_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_queue_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."match_winner_votes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."match_winner_votes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."match_winner_votes_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."matches" TO "anon";
GRANT ALL ON TABLE "public"."matches" TO "authenticated";
GRANT ALL ON TABLE "public"."matches" TO "service_role";

GRANT ALL ON SEQUENCE "public"."matches_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."matches_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."matches_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."messages" TO "anon";
GRANT ALL ON TABLE "public"."messages" TO "authenticated";
GRANT ALL ON TABLE "public"."messages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."mods" TO "anon";
GRANT ALL ON TABLE "public"."mods" TO "authenticated";
GRANT ALL ON TABLE "public"."mods" TO "service_role";

GRANT ALL ON SEQUENCE "public"."mods_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."mods_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."mods_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."notifications" TO "anon";
GRANT ALL ON TABLE "public"."notifications" TO "authenticated";
GRANT ALL ON TABLE "public"."notifications" TO "service_role";

GRANT ALL ON SEQUENCE "public"."notification_recipient_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."notification_recipient_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."notification_recipient_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."organisation_member_roles" TO "anon";
GRANT ALL ON TABLE "public"."organisation_member_roles" TO "authenticated";
GRANT ALL ON TABLE "public"."organisation_member_roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."organisation_member_role_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."organisation_member_role_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."organisation_member_role_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."organisation_members" TO "anon";
GRANT ALL ON TABLE "public"."organisation_members" TO "authenticated";
GRANT ALL ON TABLE "public"."organisation_members" TO "service_role";

GRANT ALL ON SEQUENCE "public"."organisation_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."organisation_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."organisation_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."organisation_roles" TO "anon";
GRANT ALL ON TABLE "public"."organisation_roles" TO "authenticated";
GRANT ALL ON TABLE "public"."organisation_roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."organisation_role_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."organisation_role_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."organisation_role_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."organisations" TO "anon";
GRANT ALL ON TABLE "public"."organisations" TO "authenticated";
GRANT ALL ON TABLE "public"."organisations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."organisations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."organisations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."organisations_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."participant_disqualification" TO "anon";
GRANT ALL ON TABLE "public"."participant_disqualification" TO "authenticated";
GRANT ALL ON TABLE "public"."participant_disqualification" TO "service_role";

GRANT ALL ON SEQUENCE "public"."participant_disqualification_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."participant_disqualification_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."participant_disqualification_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."participants" TO "anon";
GRANT ALL ON TABLE "public"."participants" TO "authenticated";
GRANT ALL ON TABLE "public"."participants" TO "service_role";

GRANT ALL ON TABLE "public"."pinned_scores" TO "anon";
GRANT ALL ON TABLE "public"."pinned_scores" TO "authenticated";
GRANT ALL ON TABLE "public"."pinned_scores" TO "service_role";

GRANT ALL ON SEQUENCE "public"."pinned_scores_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pinned_scores_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pinned_scores_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."platforms" TO "anon";
GRANT ALL ON TABLE "public"."platforms" TO "authenticated";
GRANT ALL ON TABLE "public"."platforms" TO "service_role";

GRANT ALL ON SEQUENCE "public"."platforms_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."platforms_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."platforms_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_prizes" TO "anon";
GRANT ALL ON TABLE "public"."user_prizes" TO "authenticated";
GRANT ALL ON TABLE "public"."user_prizes" TO "service_role";

GRANT ALL ON SEQUENCE "public"."prizes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."prizes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."prizes_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."purchases" TO "anon";
GRANT ALL ON TABLE "public"."purchases" TO "authenticated";
GRANT ALL ON TABLE "public"."purchases" TO "service_role";

GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_ratings" TO "anon";
GRANT ALL ON TABLE "public"."user_ratings" TO "authenticated";
GRANT ALL ON TABLE "public"."user_ratings" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ratings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ratings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ratings_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."registration_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."registration_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."registration_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."rounds" TO "anon";
GRANT ALL ON TABLE "public"."rounds" TO "authenticated";
GRANT ALL ON TABLE "public"."rounds" TO "service_role";

GRANT ALL ON SEQUENCE "public"."rounds_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."rounds_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."rounds_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."scores" TO "anon";
GRANT ALL ON TABLE "public"."scores" TO "authenticated";
GRANT ALL ON TABLE "public"."scores" TO "service_role";

GRANT ALL ON SEQUENCE "public"."scores_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."scores_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."scores_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."spectators" TO "anon";
GRANT ALL ON TABLE "public"."spectators" TO "authenticated";
GRANT ALL ON TABLE "public"."spectators" TO "service_role";

GRANT ALL ON SEQUENCE "public"."spectator_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."spectator_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."spectator_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."team_members" TO "anon";
GRANT ALL ON TABLE "public"."team_members" TO "authenticated";
GRANT ALL ON TABLE "public"."team_members" TO "service_role";

GRANT ALL ON SEQUENCE "public"."team_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."team_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."team_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."teams" TO "anon";
GRANT ALL ON TABLE "public"."teams" TO "authenticated";
GRANT ALL ON TABLE "public"."teams" TO "service_role";

GRANT ALL ON SEQUENCE "public"."teams_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."teams_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."teams_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_badges" TO "anon";
GRANT ALL ON TABLE "public"."user_badges" TO "authenticated";
GRANT ALL ON TABLE "public"."user_badges" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_badges_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_badges_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_badges_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_platforms" TO "anon";
GRANT ALL ON TABLE "public"."user_platforms" TO "authenticated";
GRANT ALL ON TABLE "public"."user_platforms" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_platforms_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_platforms_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_platforms_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_profiles" TO "anon";
GRANT ALL ON TABLE "public"."user_profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."user_profiles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_profiles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_profiles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_profiles_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
