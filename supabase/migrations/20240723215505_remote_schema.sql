create type "public"."Ranks" as enum ('F', 'D', 'C', 'B', 'A', 'S', 'SH', 'SS', 'X');

create type "public"."event_status" as enum ('draft', 'published', 'playing', 'finished', 'paused', 'cancelled');

create type "public"."match_map_status" as enum ('waiting', 'playing', 'aborted', 'finished');

create type "public"."match_types" as enum ('event', 'quick');

create type "public"."notification_types" as enum ('match_invite', 'event_invite', 'team_invite', 'message');

create table "public"."badges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "event_id" bigint,
    "name" text not null,
    "osu_id" text
);


alter table "public"."badges" enable row level security;

create table "public"."event_groups" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "organisation_id" bigint,
    "name" text
);


alter table "public"."event_groups" enable row level security;

create table "public"."event_links" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "event_id" bigint not null,
    "platform_id" bigint not null,
    "link_param" text
);


alter table "public"."event_links" enable row level security;

create table "public"."event_options" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "max_registrations" smallint,
    "max_players" smallint,
    "lower_rank_limit" integer,
    "upper_rank_limit" integer,
    "bws_formula_id" smallint
);


alter table "public"."event_options" enable row level security;

create table "public"."event_statuses" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "status" text not null,
    "emoji" text
);


alter table "public"."event_statuses" enable row level security;

create table "public"."events" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "game_id" bigint,
    "organisation_id" bigint,
    "event_options_id" bigint,
    "event_status_id" bigint,
    "event_group_id" bigint,
    "description" text,
    "quick_event" boolean not null default false
);


alter table "public"."events" enable row level security;

create table "public"."games" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text
);


alter table "public"."games" enable row level security;

create table "public"."map_pool_map_mods" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "map_pool_map_id" bigint not null,
    "mod_id" bigint not null
);


alter table "public"."map_pool_map_mods" enable row level security;

create table "public"."map_pool_maps" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "map_pool_id" bigint not null,
    "map_id" bigint,
    "notes" text,
    "mod_priority" smallint not null
);


alter table "public"."map_pool_maps" enable row level security;

create table "public"."map_pools" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "description" text,
    "name" text,
    "deleted_at" timestamp with time zone,
    "round_id" bigint,
    "recommended_best_of" integer not null default 7,
    "verified" boolean not null default false
);


alter table "public"."map_pools" enable row level security;

create table "public"."maps" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "osu_id" integer not null,
    "mapset_id" bigint not null,
    "star_rating" real not null,
    "difficulty_name" text,
    "mapper_name" text,
    "approach_rate" real,
    "circle_size" real,
    "overall_difficulty" real,
    "deleted_at" timestamp with time zone
);


alter table "public"."maps" enable row level security;

create table "public"."mapsets" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "osu_id" integer not null,
    "artist" text,
    "title" text,
    "bpm" real,
    "time" integer,
    "creator" text
);


alter table "public"."mapsets" enable row level security;

create table "public"."match_bans" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_id" bigint not null,
    "map_pool_map_id" bigint,
    "time_limit" timestamp with time zone,
    "ban_time" timestamp with time zone,
    "match_participant_id" bigint
);


alter table "public"."match_bans" enable row level security;

create table "public"."match_calendar_events" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."match_calendar_events" enable row level security;

create table "public"."match_invites" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "accepted_at" timestamp with time zone,
    "sender_id" bigint not null,
    "pool_id" bigint not null,
    "best_of" smallint not null default '7'::smallint,
    "notification_id" bigint
);


alter table "public"."match_invites" enable row level security;

create table "public"."match_maps" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_id" bigint not null,
    "map_pool_map_id" bigint not null,
    "status" match_map_status not null,
    "picked_by" bigint not null
);


alter table "public"."match_maps" enable row level security;

create table "public"."match_participant_player_states" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "emoji" text
);


alter table "public"."match_participant_player_states" enable row level security;

create table "public"."match_participant_players" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_participant_id" bigint,
    "team_member" bigint,
    "state" bigint not null
);


alter table "public"."match_participant_players" enable row level security;

create table "public"."match_participants" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_id" bigint not null,
    "participant_id" bigint,
    "roll" smallint,
    "surrendered_bans" boolean not null default false
);


alter table "public"."match_participants" enable row level security;

create table "public"."match_predictions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_id" bigint,
    "winning_participant_id" bigint,
    "user_id" bigint not null
);


alter table "public"."match_predictions" enable row level security;

create table "public"."match_queue" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_id" bigint not null,
    "position" smallint
);


alter table "public"."match_queue" enable row level security;

create table "public"."matches" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "round_id" bigint,
    "ongoing" boolean not null default false,
    "winner_participant_id" bigint,
    "start_time" timestamp with time zone,
    "is_losers_match" boolean,
    "next_match_id" bigint,
    "next_losers_match_id" bigint,
    "lobby_id" text,
    "type" match_types not null default 'quick'::match_types,
    "map_pool_id" bigint,
    "tiebreaker" boolean not null default false
);


alter table "public"."matches" enable row level security;

create table "public"."messages" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "body" text
);


alter table "public"."messages" enable row level security;

create table "public"."mods" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "description" text,
    "code" text,
    "order_no" smallint not null default '1'::smallint,
    "deleted_at" timestamp with time zone
);


alter table "public"."mods" enable row level security;

create table "public"."notifications" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "dismissed_at" timestamp with time zone,
    "title" text,
    "body" text,
    "type" notification_types not null default 'message'::notification_types,
    "href" text
);


alter table "public"."notifications" enable row level security;

create table "public"."organisation_followers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "follower_user_id" bigint not null,
    "organisation_id" bigint not null
);


alter table "public"."organisation_followers" enable row level security;

create table "public"."organisation_member_roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "organisation_member_id" bigint not null,
    "organisation_role_id" bigint,
    "custom_role_name" text
);


alter table "public"."organisation_member_roles" enable row level security;

create table "public"."organisation_members" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "organisation_id" bigint,
    "user_id" bigint
);


alter table "public"."organisation_members" enable row level security;

create table "public"."organisation_roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null
);


alter table "public"."organisation_roles" enable row level security;

create table "public"."organisations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text
);


alter table "public"."organisations" enable row level security;

create table "public"."participant_disqualification" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "participant_id" bigint,
    "reason" text
);


alter table "public"."participant_disqualification" enable row level security;

create table "public"."participants" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "team_id" bigint not null,
    "event_id" bigint not null,
    "disqualified_at" timestamp with time zone
);


alter table "public"."participants" enable row level security;

create table "public"."pinned_scores" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint,
    "score_id" bigint,
    "index" real not null default '1'::real
);


alter table "public"."pinned_scores" enable row level security;

create table "public"."platforms" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "url" text
);


alter table "public"."platforms" enable row level security;

create table "public"."purchases" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null
);


alter table "public"."purchases" enable row level security;

create table "public"."quick_queue" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "position" integer,
    "team_id" bigint not null
);


alter table "public"."quick_queue" enable row level security;

create table "public"."rounds" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "event_id" bigint not null,
    "name" text default 'Grand Finals'::text,
    "best_of" smallint default '13'::smallint,
    "bans_per_match_participant" integer default 2
);


alter table "public"."rounds" enable row level security;

create table "public"."scores" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "match_map_id" bigint not null,
    "match_participant_player_id" bigint not null,
    "score" integer not null default 0,
    "rank" "Ranks",
    "failed" boolean not null default false
);


alter table "public"."scores" enable row level security;

create table "public"."spectators" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint,
    "match_id" bigint,
    "stopped_at" timestamp with time zone
);


alter table "public"."spectators" enable row level security;

create table "public"."team_members" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "team_id" bigint not null,
    "user_id" bigint not null
);


alter table "public"."team_members" enable row level security;

create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "is_personal_team" boolean not null,
    "bio" text,
    "country_code" text,
    "picture_url" text not null default 'https://mdixwlzweijevgjmcsmt.supabase.co/storage/v1/object/public/team_icons/default'::text,
    "deleted_at" timestamp with time zone
);


alter table "public"."teams" enable row level security;

create table "public"."user_badges" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint,
    "badge_id" bigint
);


alter table "public"."user_badges" enable row level security;

create table "public"."user_followers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "follower_user_id" bigint not null,
    "followee_user_id" bigint not null
);


alter table "public"."user_followers" enable row level security;

create table "public"."user_platforms" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint,
    "platform_id" bigint,
    "value" text
);


alter table "public"."user_platforms" enable row level security;

create table "public"."user_prizes" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "name" text not null
);


alter table "public"."user_prizes" enable row level security;

create table "public"."user_profiles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "user_id" uuid not null,
    "country_code" text,
    "picture_url" text,
    "finished_setup" boolean not null default false,
    "deleted_at" timestamp with time zone
);


alter table "public"."user_profiles" enable row level security;

create table "public"."user_ratings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "rating" integer,
    "game_id" bigint not null
);


alter table "public"."user_ratings" enable row level security;

CREATE UNIQUE INDEX badges_pkey ON public.badges USING btree (id);

CREATE UNIQUE INDEX event_followers_duplicate_pkey ON public.organisation_followers USING btree (id);

CREATE UNIQUE INDEX event_links_pkey ON public.event_links USING btree (id);

CREATE UNIQUE INDEX event_options_pkey ON public.event_options USING btree (id);

CREATE UNIQUE INDEX event_series_pkey ON public.event_groups USING btree (id);

CREATE UNIQUE INDEX event_statuses_pkey ON public.event_statuses USING btree (id);

CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id);

CREATE UNIQUE INDEX follows_pkey ON public.user_followers USING btree (id);

CREATE UNIQUE INDEX games_pkey ON public.games USING btree (id);

CREATE UNIQUE INDEX map_pkey ON public.maps USING btree (id);

CREATE UNIQUE INDEX map_pool_maps_pkey ON public.map_pool_maps USING btree (id);

CREATE UNIQUE INDEX map_pool_mods_pkey ON public.map_pool_map_mods USING btree (id);

CREATE UNIQUE INDEX map_pool_pkey ON public.map_pools USING btree (id);

CREATE UNIQUE INDEX maps_osu_id_key ON public.maps USING btree (osu_id);

CREATE UNIQUE INDEX mapsets_osu_id_key ON public.mapsets USING btree (osu_id);

CREATE UNIQUE INDEX mapsets_pkey ON public.mapsets USING btree (id);

CREATE UNIQUE INDEX match_bans_pkey ON public.match_bans USING btree (id);

CREATE UNIQUE INDEX match_calendar_events_pkey ON public.match_calendar_events USING btree (id);

CREATE UNIQUE INDEX match_invites_pkey ON public.match_invites USING btree (id);

CREATE UNIQUE INDEX match_maps_pkey ON public.match_maps USING btree (id);

CREATE UNIQUE INDEX match_participant_player_pkey ON public.match_participant_players USING btree (id);

CREATE UNIQUE INDEX match_participant_player_states_pkey ON public.match_participant_player_states USING btree (id);

CREATE UNIQUE INDEX match_participants_pkey ON public.match_participants USING btree (id);

CREATE UNIQUE INDEX match_queue_pkey ON public.match_queue USING btree (id);

CREATE UNIQUE INDEX match_queue_position_key ON public.match_queue USING btree ("position");

CREATE UNIQUE INDEX match_winner_votes_pkey ON public.match_predictions USING btree (id);

CREATE UNIQUE INDEX matches_pkey ON public.matches USING btree (id);

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

CREATE UNIQUE INDEX mods_pkey ON public.mods USING btree (id);

CREATE UNIQUE INDEX notification_recipient_pkey ON public.notifications USING btree (id);

CREATE UNIQUE INDEX organisation_member_role_pkey ON public.organisation_member_roles USING btree (id);

CREATE UNIQUE INDEX organisation_members_pkey ON public.organisation_members USING btree (id);

CREATE UNIQUE INDEX organisation_role_pkey ON public.organisation_roles USING btree (id);

CREATE UNIQUE INDEX organisations_pkey ON public.organisations USING btree (id);

CREATE UNIQUE INDEX participant_disqualification_pkey ON public.participant_disqualification USING btree (id);

CREATE UNIQUE INDEX pinned_scores_pkey ON public.pinned_scores USING btree (id);

CREATE UNIQUE INDEX platforms_name_key ON public.platforms USING btree (name);

CREATE UNIQUE INDEX platforms_pkey ON public.platforms USING btree (id);

CREATE UNIQUE INDEX prizes_pkey ON public.user_prizes USING btree (id);

CREATE UNIQUE INDEX purchases_pkey ON public.purchases USING btree (id);

CREATE UNIQUE INDEX ratings_pkey ON public.user_ratings USING btree (id);

CREATE UNIQUE INDEX registration_pkey ON public.participants USING btree (id);

CREATE UNIQUE INDEX rounds_pkey ON public.rounds USING btree (id);

CREATE UNIQUE INDEX scores_pkey ON public.scores USING btree (id);

CREATE UNIQUE INDEX solo_queue_pkey ON public.quick_queue USING btree (id);

CREATE UNIQUE INDEX solo_queue_position_key ON public.quick_queue USING btree ("position");

CREATE UNIQUE INDEX spectator_pkey ON public.spectators USING btree (id);

CREATE UNIQUE INDEX team_members_pkey ON public.team_members USING btree (id);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

CREATE UNIQUE INDEX unique_name_personal_team ON public.teams USING btree (name, is_personal_team);

CREATE UNIQUE INDEX unique_user_platform ON public.user_platforms USING btree (user_id, platform_id);

CREATE UNIQUE INDEX unique_user_team ON public.team_members USING btree (user_id, team_id);

CREATE UNIQUE INDEX user_badges_pkey ON public.user_badges USING btree (id);

CREATE UNIQUE INDEX user_platforms_pkey ON public.user_platforms USING btree (id);

CREATE UNIQUE INDEX user_platforms_user_id_platform_id_key ON public.user_platforms USING btree (user_id, platform_id);

CREATE UNIQUE INDEX user_profiles_pkey ON public.user_profiles USING btree (id);

CREATE UNIQUE INDEX user_profiles_user_id_key ON public.user_profiles USING btree (user_id);

alter table "public"."badges" add constraint "badges_pkey" PRIMARY KEY using index "badges_pkey";

alter table "public"."event_groups" add constraint "event_series_pkey" PRIMARY KEY using index "event_series_pkey";

alter table "public"."event_links" add constraint "event_links_pkey" PRIMARY KEY using index "event_links_pkey";

alter table "public"."event_options" add constraint "event_options_pkey" PRIMARY KEY using index "event_options_pkey";

alter table "public"."event_statuses" add constraint "event_statuses_pkey" PRIMARY KEY using index "event_statuses_pkey";

alter table "public"."events" add constraint "events_pkey" PRIMARY KEY using index "events_pkey";

alter table "public"."games" add constraint "games_pkey" PRIMARY KEY using index "games_pkey";

alter table "public"."map_pool_map_mods" add constraint "map_pool_mods_pkey" PRIMARY KEY using index "map_pool_mods_pkey";

alter table "public"."map_pool_maps" add constraint "map_pool_maps_pkey" PRIMARY KEY using index "map_pool_maps_pkey";

alter table "public"."map_pools" add constraint "map_pool_pkey" PRIMARY KEY using index "map_pool_pkey";

alter table "public"."maps" add constraint "map_pkey" PRIMARY KEY using index "map_pkey";

alter table "public"."mapsets" add constraint "mapsets_pkey" PRIMARY KEY using index "mapsets_pkey";

alter table "public"."match_bans" add constraint "match_bans_pkey" PRIMARY KEY using index "match_bans_pkey";

alter table "public"."match_calendar_events" add constraint "match_calendar_events_pkey" PRIMARY KEY using index "match_calendar_events_pkey";

alter table "public"."match_invites" add constraint "match_invites_pkey" PRIMARY KEY using index "match_invites_pkey";

alter table "public"."match_maps" add constraint "match_maps_pkey" PRIMARY KEY using index "match_maps_pkey";

alter table "public"."match_participant_player_states" add constraint "match_participant_player_states_pkey" PRIMARY KEY using index "match_participant_player_states_pkey";

alter table "public"."match_participant_players" add constraint "match_participant_player_pkey" PRIMARY KEY using index "match_participant_player_pkey";

alter table "public"."match_participants" add constraint "match_participants_pkey" PRIMARY KEY using index "match_participants_pkey";

alter table "public"."match_predictions" add constraint "match_winner_votes_pkey" PRIMARY KEY using index "match_winner_votes_pkey";

alter table "public"."match_queue" add constraint "match_queue_pkey" PRIMARY KEY using index "match_queue_pkey";

alter table "public"."matches" add constraint "matches_pkey" PRIMARY KEY using index "matches_pkey";

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."mods" add constraint "mods_pkey" PRIMARY KEY using index "mods_pkey";

alter table "public"."notifications" add constraint "notification_recipient_pkey" PRIMARY KEY using index "notification_recipient_pkey";

alter table "public"."organisation_followers" add constraint "event_followers_duplicate_pkey" PRIMARY KEY using index "event_followers_duplicate_pkey";

alter table "public"."organisation_member_roles" add constraint "organisation_member_role_pkey" PRIMARY KEY using index "organisation_member_role_pkey";

alter table "public"."organisation_members" add constraint "organisation_members_pkey" PRIMARY KEY using index "organisation_members_pkey";

alter table "public"."organisation_roles" add constraint "organisation_role_pkey" PRIMARY KEY using index "organisation_role_pkey";

alter table "public"."organisations" add constraint "organisations_pkey" PRIMARY KEY using index "organisations_pkey";

alter table "public"."participant_disqualification" add constraint "participant_disqualification_pkey" PRIMARY KEY using index "participant_disqualification_pkey";

alter table "public"."participants" add constraint "registration_pkey" PRIMARY KEY using index "registration_pkey";

alter table "public"."pinned_scores" add constraint "pinned_scores_pkey" PRIMARY KEY using index "pinned_scores_pkey";

alter table "public"."platforms" add constraint "platforms_pkey" PRIMARY KEY using index "platforms_pkey";

alter table "public"."purchases" add constraint "purchases_pkey" PRIMARY KEY using index "purchases_pkey";

alter table "public"."quick_queue" add constraint "solo_queue_pkey" PRIMARY KEY using index "solo_queue_pkey";

alter table "public"."rounds" add constraint "rounds_pkey" PRIMARY KEY using index "rounds_pkey";

alter table "public"."scores" add constraint "scores_pkey" PRIMARY KEY using index "scores_pkey";

alter table "public"."spectators" add constraint "spectator_pkey" PRIMARY KEY using index "spectator_pkey";

alter table "public"."team_members" add constraint "team_members_pkey" PRIMARY KEY using index "team_members_pkey";

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";

alter table "public"."user_badges" add constraint "user_badges_pkey" PRIMARY KEY using index "user_badges_pkey";

alter table "public"."user_followers" add constraint "follows_pkey" PRIMARY KEY using index "follows_pkey";

alter table "public"."user_platforms" add constraint "user_platforms_pkey" PRIMARY KEY using index "user_platforms_pkey";

alter table "public"."user_prizes" add constraint "prizes_pkey" PRIMARY KEY using index "prizes_pkey";

alter table "public"."user_profiles" add constraint "user_profiles_pkey" PRIMARY KEY using index "user_profiles_pkey";

alter table "public"."user_ratings" add constraint "ratings_pkey" PRIMARY KEY using index "ratings_pkey";

alter table "public"."badges" add constraint "badges_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."badges" validate constraint "badges_event_id_fkey";

alter table "public"."event_groups" add constraint "event_series_organisation_id_fkey" FOREIGN KEY (organisation_id) REFERENCES organisations(id) not valid;

alter table "public"."event_groups" validate constraint "event_series_organisation_id_fkey";

alter table "public"."event_links" add constraint "event_links_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."event_links" validate constraint "event_links_event_id_fkey";

alter table "public"."event_links" add constraint "event_links_platform_id_fkey" FOREIGN KEY (platform_id) REFERENCES platforms(id) not valid;

alter table "public"."event_links" validate constraint "event_links_platform_id_fkey";

alter table "public"."events" add constraint "events_event_options_id_fkey" FOREIGN KEY (event_options_id) REFERENCES event_options(id) not valid;

alter table "public"."events" validate constraint "events_event_options_id_fkey";

alter table "public"."events" add constraint "events_event_serie_fkey" FOREIGN KEY (event_group_id) REFERENCES event_groups(id) not valid;

alter table "public"."events" validate constraint "events_event_serie_fkey";

alter table "public"."events" add constraint "events_event_status_id_fkey" FOREIGN KEY (event_status_id) REFERENCES event_statuses(id) not valid;

alter table "public"."events" validate constraint "events_event_status_id_fkey";

alter table "public"."events" add constraint "events_game_id_fkey" FOREIGN KEY (game_id) REFERENCES games(id) not valid;

alter table "public"."events" validate constraint "events_game_id_fkey";

alter table "public"."events" add constraint "events_organisation_id_fkey" FOREIGN KEY (organisation_id) REFERENCES organisations(id) not valid;

alter table "public"."events" validate constraint "events_organisation_id_fkey";

alter table "public"."map_pool_map_mods" add constraint "map_pool_map_mod_map_pool_map_id_fkey" FOREIGN KEY (map_pool_map_id) REFERENCES map_pool_maps(id) not valid;

alter table "public"."map_pool_map_mods" validate constraint "map_pool_map_mod_map_pool_map_id_fkey";

alter table "public"."map_pool_map_mods" add constraint "map_pool_map_mod_mod_id_fkey" FOREIGN KEY (mod_id) REFERENCES mods(id) not valid;

alter table "public"."map_pool_map_mods" validate constraint "map_pool_map_mod_mod_id_fkey";

alter table "public"."map_pool_maps" add constraint "map_pool_maps_map_id_fkey" FOREIGN KEY (map_id) REFERENCES maps(id) not valid;

alter table "public"."map_pool_maps" validate constraint "map_pool_maps_map_id_fkey";

alter table "public"."map_pool_maps" add constraint "map_pool_maps_map_pool_id_fkey" FOREIGN KEY (map_pool_id) REFERENCES map_pools(id) not valid;

alter table "public"."map_pool_maps" validate constraint "map_pool_maps_map_pool_id_fkey";

alter table "public"."map_pools" add constraint "map_pools_round_id_fkey" FOREIGN KEY (round_id) REFERENCES rounds(id) not valid;

alter table "public"."map_pools" validate constraint "map_pools_round_id_fkey";

alter table "public"."maps" add constraint "maps_mapset_id_fkey" FOREIGN KEY (mapset_id) REFERENCES mapsets(id) not valid;

alter table "public"."maps" validate constraint "maps_mapset_id_fkey";

alter table "public"."maps" add constraint "maps_osu_id_key" UNIQUE using index "maps_osu_id_key";

alter table "public"."mapsets" add constraint "mapsets_osu_id_key" UNIQUE using index "mapsets_osu_id_key";

alter table "public"."match_bans" add constraint "public_match_bans_map_pool_map_id_fkey" FOREIGN KEY (map_pool_map_id) REFERENCES map_pool_maps(id) not valid;

alter table "public"."match_bans" validate constraint "public_match_bans_map_pool_map_id_fkey";

alter table "public"."match_bans" add constraint "public_match_bans_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."match_bans" validate constraint "public_match_bans_match_id_fkey";

alter table "public"."match_bans" add constraint "public_match_bans_match_participant_id_fkey" FOREIGN KEY (match_participant_id) REFERENCES match_participants(id) not valid;

alter table "public"."match_bans" validate constraint "public_match_bans_match_participant_id_fkey";

alter table "public"."match_invites" add constraint "match_invites_notification_id_fkey" FOREIGN KEY (notification_id) REFERENCES notifications(id) not valid;

alter table "public"."match_invites" validate constraint "match_invites_notification_id_fkey";

alter table "public"."match_invites" add constraint "match_invites_pool_id_fkey" FOREIGN KEY (pool_id) REFERENCES map_pools(id) not valid;

alter table "public"."match_invites" validate constraint "match_invites_pool_id_fkey";

alter table "public"."match_invites" add constraint "match_invites_sender_id_fkey" FOREIGN KEY (sender_id) REFERENCES teams(id) not valid;

alter table "public"."match_invites" validate constraint "match_invites_sender_id_fkey";

alter table "public"."match_maps" add constraint "match_maps_map_pool_map_id_fkey" FOREIGN KEY (map_pool_map_id) REFERENCES map_pool_maps(id) not valid;

alter table "public"."match_maps" validate constraint "match_maps_map_pool_map_id_fkey";

alter table "public"."match_maps" add constraint "match_maps_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."match_maps" validate constraint "match_maps_match_id_fkey";

alter table "public"."match_maps" add constraint "match_maps_picked_by_fkey" FOREIGN KEY (picked_by) REFERENCES match_participants(id) not valid;

alter table "public"."match_maps" validate constraint "match_maps_picked_by_fkey";

alter table "public"."match_participant_players" add constraint "match_participant_players_match_participant_id_fkey" FOREIGN KEY (match_participant_id) REFERENCES match_participants(id) not valid;

alter table "public"."match_participant_players" validate constraint "match_participant_players_match_participant_id_fkey";

alter table "public"."match_participant_players" add constraint "match_participant_players_state_fkey" FOREIGN KEY (state) REFERENCES match_participant_player_states(id) not valid;

alter table "public"."match_participant_players" validate constraint "match_participant_players_state_fkey";

alter table "public"."match_participant_players" add constraint "match_participant_players_team_member_fkey" FOREIGN KEY (team_member) REFERENCES team_members(id) not valid;

alter table "public"."match_participant_players" validate constraint "match_participant_players_team_member_fkey";

alter table "public"."match_participants" add constraint "match_participants_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."match_participants" validate constraint "match_participants_match_id_fkey";

alter table "public"."match_participants" add constraint "match_participants_participant_id_fkey" FOREIGN KEY (participant_id) REFERENCES participants(id) not valid;

alter table "public"."match_participants" validate constraint "match_participants_participant_id_fkey";

alter table "public"."match_predictions" add constraint "match_predictions_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."match_predictions" validate constraint "match_predictions_match_id_fkey";

alter table "public"."match_predictions" add constraint "match_predictions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."match_predictions" validate constraint "match_predictions_user_id_fkey";

alter table "public"."match_predictions" add constraint "match_predictions_winning_participant_id_fkey" FOREIGN KEY (winning_participant_id) REFERENCES participants(id) not valid;

alter table "public"."match_predictions" validate constraint "match_predictions_winning_participant_id_fkey";

alter table "public"."match_queue" add constraint "match_queue_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."match_queue" validate constraint "match_queue_match_id_fkey";

alter table "public"."match_queue" add constraint "match_queue_position_key" UNIQUE using index "match_queue_position_key";

alter table "public"."matches" add constraint "matches_map_pool_id_fkey" FOREIGN KEY (map_pool_id) REFERENCES map_pools(id) not valid;

alter table "public"."matches" validate constraint "matches_map_pool_id_fkey";

alter table "public"."matches" add constraint "matches_next_losers_match_id_fkey" FOREIGN KEY (next_losers_match_id) REFERENCES matches(id) not valid;

alter table "public"."matches" validate constraint "matches_next_losers_match_id_fkey";

alter table "public"."matches" add constraint "matches_next_match_id_fkey" FOREIGN KEY (next_match_id) REFERENCES matches(id) not valid;

alter table "public"."matches" validate constraint "matches_next_match_id_fkey";

alter table "public"."matches" add constraint "matches_round_id_fkey" FOREIGN KEY (round_id) REFERENCES rounds(id) not valid;

alter table "public"."matches" validate constraint "matches_round_id_fkey";

alter table "public"."matches" add constraint "matches_winner_participant_id_fkey" FOREIGN KEY (winner_participant_id) REFERENCES participants(id) not valid;

alter table "public"."matches" validate constraint "matches_winner_participant_id_fkey";

alter table "public"."messages" add constraint "messages_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."messages" validate constraint "messages_user_id_fkey";

alter table "public"."notifications" add constraint "public_notification_recipient_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."notifications" validate constraint "public_notification_recipient_user_id_fkey";

alter table "public"."organisation_followers" add constraint "organisation_followers_follower_user_id_fkey" FOREIGN KEY (follower_user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."organisation_followers" validate constraint "organisation_followers_follower_user_id_fkey";

alter table "public"."organisation_followers" add constraint "organisation_followers_organisation_id_fkey" FOREIGN KEY (organisation_id) REFERENCES organisations(id) not valid;

alter table "public"."organisation_followers" validate constraint "organisation_followers_organisation_id_fkey";

alter table "public"."organisation_member_roles" add constraint "organisation_member_role_organisation_member_id_fkey" FOREIGN KEY (organisation_member_id) REFERENCES organisation_members(id) not valid;

alter table "public"."organisation_member_roles" validate constraint "organisation_member_role_organisation_member_id_fkey";

alter table "public"."organisation_member_roles" add constraint "organisation_member_role_organisation_staff_role_id_fkey" FOREIGN KEY (organisation_role_id) REFERENCES organisation_roles(id) not valid;

alter table "public"."organisation_member_roles" validate constraint "organisation_member_role_organisation_staff_role_id_fkey";

alter table "public"."organisation_members" add constraint "organisation_members_organisation_id_fkey" FOREIGN KEY (organisation_id) REFERENCES organisations(id) not valid;

alter table "public"."organisation_members" validate constraint "organisation_members_organisation_id_fkey";

alter table "public"."organisation_members" add constraint "organisation_members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."organisation_members" validate constraint "organisation_members_user_id_fkey";

alter table "public"."participant_disqualification" add constraint "public_participant_disqualification_participant_id_fkey" FOREIGN KEY (participant_id) REFERENCES participants(id) not valid;

alter table "public"."participant_disqualification" validate constraint "public_participant_disqualification_participant_id_fkey";

alter table "public"."participants" add constraint "participants_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."participants" validate constraint "participants_event_id_fkey";

alter table "public"."participants" add constraint "participants_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."participants" validate constraint "participants_team_id_fkey";

alter table "public"."pinned_scores" add constraint "pinned_scores_score_id_fkey" FOREIGN KEY (score_id) REFERENCES scores(id) not valid;

alter table "public"."pinned_scores" validate constraint "pinned_scores_score_id_fkey";

alter table "public"."pinned_scores" add constraint "pinned_scores_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."pinned_scores" validate constraint "pinned_scores_user_id_fkey";

alter table "public"."platforms" add constraint "platforms_name_key" UNIQUE using index "platforms_name_key";

alter table "public"."purchases" add constraint "purchases_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."purchases" validate constraint "purchases_user_id_fkey";

alter table "public"."quick_queue" add constraint "solo_queue_position_key" UNIQUE using index "solo_queue_position_key";

alter table "public"."quick_queue" add constraint "solo_queue_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."quick_queue" validate constraint "solo_queue_team_id_fkey";

alter table "public"."rounds" add constraint "rounds_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."rounds" validate constraint "rounds_event_id_fkey";

alter table "public"."scores" add constraint "scores_match_map_id_fkey" FOREIGN KEY (match_map_id) REFERENCES match_maps(id) not valid;

alter table "public"."scores" validate constraint "scores_match_map_id_fkey";

alter table "public"."scores" add constraint "scores_match_participant_player_id_fkey" FOREIGN KEY (match_participant_player_id) REFERENCES match_participant_players(id) not valid;

alter table "public"."scores" validate constraint "scores_match_participant_player_id_fkey";

alter table "public"."spectators" add constraint "spectators_match_id_fkey" FOREIGN KEY (match_id) REFERENCES matches(id) not valid;

alter table "public"."spectators" validate constraint "spectators_match_id_fkey";

alter table "public"."spectators" add constraint "spectators_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."spectators" validate constraint "spectators_user_id_fkey";

alter table "public"."team_members" add constraint "team_members_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."team_members" validate constraint "team_members_team_id_fkey";

alter table "public"."team_members" add constraint "team_members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."team_members" validate constraint "team_members_user_id_fkey";

alter table "public"."team_members" add constraint "unique_user_team" UNIQUE using index "unique_user_team";

alter table "public"."teams" add constraint "unique_name_personal_team" UNIQUE using index "unique_name_personal_team";

alter table "public"."user_badges" add constraint "user_badges_badge_id_fkey" FOREIGN KEY (badge_id) REFERENCES badges(id) not valid;

alter table "public"."user_badges" validate constraint "user_badges_badge_id_fkey";

alter table "public"."user_badges" add constraint "user_badges_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_badges" validate constraint "user_badges_user_id_fkey";

alter table "public"."user_followers" add constraint "user_followers_followee_user_id_fkey" FOREIGN KEY (followee_user_id) REFERENCES user_followers(id) not valid;

alter table "public"."user_followers" validate constraint "user_followers_followee_user_id_fkey";

alter table "public"."user_followers" add constraint "user_followers_follower_user_id_fkey" FOREIGN KEY (follower_user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_followers" validate constraint "user_followers_follower_user_id_fkey";

alter table "public"."user_platforms" add constraint "unique_user_platform" UNIQUE using index "unique_user_platform";

alter table "public"."user_platforms" add constraint "user_platforms_platform_id_fkey" FOREIGN KEY (platform_id) REFERENCES platforms(id) not valid;

alter table "public"."user_platforms" validate constraint "user_platforms_platform_id_fkey";

alter table "public"."user_platforms" add constraint "user_platforms_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_platforms" validate constraint "user_platforms_user_id_fkey";

alter table "public"."user_platforms" add constraint "user_platforms_user_id_platform_id_key" UNIQUE using index "user_platforms_user_id_platform_id_key";

alter table "public"."user_prizes" add constraint "user_prizes_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_prizes" validate constraint "user_prizes_user_id_fkey";

alter table "public"."user_profiles" add constraint "user_profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."user_profiles" validate constraint "user_profiles_user_id_fkey";

alter table "public"."user_profiles" add constraint "user_profiles_user_id_key" UNIQUE using index "user_profiles_user_id_key";

alter table "public"."user_ratings" add constraint "user_ratings_game_id_fkey" FOREIGN KEY (game_id) REFERENCES games(id) not valid;

alter table "public"."user_ratings" validate constraint "user_ratings_game_id_fkey";

alter table "public"."user_ratings" add constraint "user_ratings_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_ratings" validate constraint "user_ratings_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.get_closest_map_pool_id(average_star_rating real)
 RETURNS real
 LANGUAGE plpgsql
AS $function$DECLARE
    closest_avg_star_rating float4;
    closest_map_pool_id int;
BEGIN
    SELECT 
        mp.id,
        AVG(m.star_rating) AS average_star_rating
    INTO 
        closest_map_pool_id,
        closest_avg_star_rating
    FROM 
        map_pools mp
    JOIN 
        map_pool_maps mpm ON mp.id = mpm.map_pool_id
    JOIN 
        maps m ON mpm.map_id = m.id
    WHERE mp.verified = true
    GROUP BY 
        mp.id
    ORDER BY 
        ABS(AVG(m.star_rating) - closest_avg_star_rating)
    LIMIT 1;

    RETURN closest_map_pool_id;
END;$function$
;

grant delete on table "public"."badges" to "anon";

grant insert on table "public"."badges" to "anon";

grant references on table "public"."badges" to "anon";

grant select on table "public"."badges" to "anon";

grant trigger on table "public"."badges" to "anon";

grant truncate on table "public"."badges" to "anon";

grant update on table "public"."badges" to "anon";

grant delete on table "public"."badges" to "authenticated";

grant insert on table "public"."badges" to "authenticated";

grant references on table "public"."badges" to "authenticated";

grant select on table "public"."badges" to "authenticated";

grant trigger on table "public"."badges" to "authenticated";

grant truncate on table "public"."badges" to "authenticated";

grant update on table "public"."badges" to "authenticated";

grant delete on table "public"."badges" to "service_role";

grant insert on table "public"."badges" to "service_role";

grant references on table "public"."badges" to "service_role";

grant select on table "public"."badges" to "service_role";

grant trigger on table "public"."badges" to "service_role";

grant truncate on table "public"."badges" to "service_role";

grant update on table "public"."badges" to "service_role";

grant delete on table "public"."event_groups" to "anon";

grant insert on table "public"."event_groups" to "anon";

grant references on table "public"."event_groups" to "anon";

grant select on table "public"."event_groups" to "anon";

grant trigger on table "public"."event_groups" to "anon";

grant truncate on table "public"."event_groups" to "anon";

grant update on table "public"."event_groups" to "anon";

grant delete on table "public"."event_groups" to "authenticated";

grant insert on table "public"."event_groups" to "authenticated";

grant references on table "public"."event_groups" to "authenticated";

grant select on table "public"."event_groups" to "authenticated";

grant trigger on table "public"."event_groups" to "authenticated";

grant truncate on table "public"."event_groups" to "authenticated";

grant update on table "public"."event_groups" to "authenticated";

grant delete on table "public"."event_groups" to "service_role";

grant insert on table "public"."event_groups" to "service_role";

grant references on table "public"."event_groups" to "service_role";

grant select on table "public"."event_groups" to "service_role";

grant trigger on table "public"."event_groups" to "service_role";

grant truncate on table "public"."event_groups" to "service_role";

grant update on table "public"."event_groups" to "service_role";

grant delete on table "public"."event_links" to "anon";

grant insert on table "public"."event_links" to "anon";

grant references on table "public"."event_links" to "anon";

grant select on table "public"."event_links" to "anon";

grant trigger on table "public"."event_links" to "anon";

grant truncate on table "public"."event_links" to "anon";

grant update on table "public"."event_links" to "anon";

grant delete on table "public"."event_links" to "authenticated";

grant insert on table "public"."event_links" to "authenticated";

grant references on table "public"."event_links" to "authenticated";

grant select on table "public"."event_links" to "authenticated";

grant trigger on table "public"."event_links" to "authenticated";

grant truncate on table "public"."event_links" to "authenticated";

grant update on table "public"."event_links" to "authenticated";

grant delete on table "public"."event_links" to "service_role";

grant insert on table "public"."event_links" to "service_role";

grant references on table "public"."event_links" to "service_role";

grant select on table "public"."event_links" to "service_role";

grant trigger on table "public"."event_links" to "service_role";

grant truncate on table "public"."event_links" to "service_role";

grant update on table "public"."event_links" to "service_role";

grant delete on table "public"."event_options" to "anon";

grant insert on table "public"."event_options" to "anon";

grant references on table "public"."event_options" to "anon";

grant select on table "public"."event_options" to "anon";

grant trigger on table "public"."event_options" to "anon";

grant truncate on table "public"."event_options" to "anon";

grant update on table "public"."event_options" to "anon";

grant delete on table "public"."event_options" to "authenticated";

grant insert on table "public"."event_options" to "authenticated";

grant references on table "public"."event_options" to "authenticated";

grant select on table "public"."event_options" to "authenticated";

grant trigger on table "public"."event_options" to "authenticated";

grant truncate on table "public"."event_options" to "authenticated";

grant update on table "public"."event_options" to "authenticated";

grant delete on table "public"."event_options" to "service_role";

grant insert on table "public"."event_options" to "service_role";

grant references on table "public"."event_options" to "service_role";

grant select on table "public"."event_options" to "service_role";

grant trigger on table "public"."event_options" to "service_role";

grant truncate on table "public"."event_options" to "service_role";

grant update on table "public"."event_options" to "service_role";

grant delete on table "public"."event_statuses" to "anon";

grant insert on table "public"."event_statuses" to "anon";

grant references on table "public"."event_statuses" to "anon";

grant select on table "public"."event_statuses" to "anon";

grant trigger on table "public"."event_statuses" to "anon";

grant truncate on table "public"."event_statuses" to "anon";

grant update on table "public"."event_statuses" to "anon";

grant delete on table "public"."event_statuses" to "authenticated";

grant insert on table "public"."event_statuses" to "authenticated";

grant references on table "public"."event_statuses" to "authenticated";

grant select on table "public"."event_statuses" to "authenticated";

grant trigger on table "public"."event_statuses" to "authenticated";

grant truncate on table "public"."event_statuses" to "authenticated";

grant update on table "public"."event_statuses" to "authenticated";

grant delete on table "public"."event_statuses" to "service_role";

grant insert on table "public"."event_statuses" to "service_role";

grant references on table "public"."event_statuses" to "service_role";

grant select on table "public"."event_statuses" to "service_role";

grant trigger on table "public"."event_statuses" to "service_role";

grant truncate on table "public"."event_statuses" to "service_role";

grant update on table "public"."event_statuses" to "service_role";

grant delete on table "public"."events" to "anon";

grant insert on table "public"."events" to "anon";

grant references on table "public"."events" to "anon";

grant select on table "public"."events" to "anon";

grant trigger on table "public"."events" to "anon";

grant truncate on table "public"."events" to "anon";

grant update on table "public"."events" to "anon";

grant delete on table "public"."events" to "authenticated";

grant insert on table "public"."events" to "authenticated";

grant references on table "public"."events" to "authenticated";

grant select on table "public"."events" to "authenticated";

grant trigger on table "public"."events" to "authenticated";

grant truncate on table "public"."events" to "authenticated";

grant update on table "public"."events" to "authenticated";

grant delete on table "public"."events" to "service_role";

grant insert on table "public"."events" to "service_role";

grant references on table "public"."events" to "service_role";

grant select on table "public"."events" to "service_role";

grant trigger on table "public"."events" to "service_role";

grant truncate on table "public"."events" to "service_role";

grant update on table "public"."events" to "service_role";

grant delete on table "public"."games" to "anon";

grant insert on table "public"."games" to "anon";

grant references on table "public"."games" to "anon";

grant select on table "public"."games" to "anon";

grant trigger on table "public"."games" to "anon";

grant truncate on table "public"."games" to "anon";

grant update on table "public"."games" to "anon";

grant delete on table "public"."games" to "authenticated";

grant insert on table "public"."games" to "authenticated";

grant references on table "public"."games" to "authenticated";

grant select on table "public"."games" to "authenticated";

grant trigger on table "public"."games" to "authenticated";

grant truncate on table "public"."games" to "authenticated";

grant update on table "public"."games" to "authenticated";

grant delete on table "public"."games" to "service_role";

grant insert on table "public"."games" to "service_role";

grant references on table "public"."games" to "service_role";

grant select on table "public"."games" to "service_role";

grant trigger on table "public"."games" to "service_role";

grant truncate on table "public"."games" to "service_role";

grant update on table "public"."games" to "service_role";

grant delete on table "public"."map_pool_map_mods" to "anon";

grant insert on table "public"."map_pool_map_mods" to "anon";

grant references on table "public"."map_pool_map_mods" to "anon";

grant select on table "public"."map_pool_map_mods" to "anon";

grant trigger on table "public"."map_pool_map_mods" to "anon";

grant truncate on table "public"."map_pool_map_mods" to "anon";

grant update on table "public"."map_pool_map_mods" to "anon";

grant delete on table "public"."map_pool_map_mods" to "authenticated";

grant insert on table "public"."map_pool_map_mods" to "authenticated";

grant references on table "public"."map_pool_map_mods" to "authenticated";

grant select on table "public"."map_pool_map_mods" to "authenticated";

grant trigger on table "public"."map_pool_map_mods" to "authenticated";

grant truncate on table "public"."map_pool_map_mods" to "authenticated";

grant update on table "public"."map_pool_map_mods" to "authenticated";

grant delete on table "public"."map_pool_map_mods" to "service_role";

grant insert on table "public"."map_pool_map_mods" to "service_role";

grant references on table "public"."map_pool_map_mods" to "service_role";

grant select on table "public"."map_pool_map_mods" to "service_role";

grant trigger on table "public"."map_pool_map_mods" to "service_role";

grant truncate on table "public"."map_pool_map_mods" to "service_role";

grant update on table "public"."map_pool_map_mods" to "service_role";

grant delete on table "public"."map_pool_maps" to "anon";

grant insert on table "public"."map_pool_maps" to "anon";

grant references on table "public"."map_pool_maps" to "anon";

grant select on table "public"."map_pool_maps" to "anon";

grant trigger on table "public"."map_pool_maps" to "anon";

grant truncate on table "public"."map_pool_maps" to "anon";

grant update on table "public"."map_pool_maps" to "anon";

grant delete on table "public"."map_pool_maps" to "authenticated";

grant insert on table "public"."map_pool_maps" to "authenticated";

grant references on table "public"."map_pool_maps" to "authenticated";

grant select on table "public"."map_pool_maps" to "authenticated";

grant trigger on table "public"."map_pool_maps" to "authenticated";

grant truncate on table "public"."map_pool_maps" to "authenticated";

grant update on table "public"."map_pool_maps" to "authenticated";

grant delete on table "public"."map_pool_maps" to "service_role";

grant insert on table "public"."map_pool_maps" to "service_role";

grant references on table "public"."map_pool_maps" to "service_role";

grant select on table "public"."map_pool_maps" to "service_role";

grant trigger on table "public"."map_pool_maps" to "service_role";

grant truncate on table "public"."map_pool_maps" to "service_role";

grant update on table "public"."map_pool_maps" to "service_role";

grant delete on table "public"."map_pools" to "anon";

grant insert on table "public"."map_pools" to "anon";

grant references on table "public"."map_pools" to "anon";

grant select on table "public"."map_pools" to "anon";

grant trigger on table "public"."map_pools" to "anon";

grant truncate on table "public"."map_pools" to "anon";

grant update on table "public"."map_pools" to "anon";

grant delete on table "public"."map_pools" to "authenticated";

grant insert on table "public"."map_pools" to "authenticated";

grant references on table "public"."map_pools" to "authenticated";

grant select on table "public"."map_pools" to "authenticated";

grant trigger on table "public"."map_pools" to "authenticated";

grant truncate on table "public"."map_pools" to "authenticated";

grant update on table "public"."map_pools" to "authenticated";

grant delete on table "public"."map_pools" to "service_role";

grant insert on table "public"."map_pools" to "service_role";

grant references on table "public"."map_pools" to "service_role";

grant select on table "public"."map_pools" to "service_role";

grant trigger on table "public"."map_pools" to "service_role";

grant truncate on table "public"."map_pools" to "service_role";

grant update on table "public"."map_pools" to "service_role";

grant delete on table "public"."maps" to "anon";

grant insert on table "public"."maps" to "anon";

grant references on table "public"."maps" to "anon";

grant select on table "public"."maps" to "anon";

grant trigger on table "public"."maps" to "anon";

grant truncate on table "public"."maps" to "anon";

grant update on table "public"."maps" to "anon";

grant delete on table "public"."maps" to "authenticated";

grant insert on table "public"."maps" to "authenticated";

grant references on table "public"."maps" to "authenticated";

grant select on table "public"."maps" to "authenticated";

grant trigger on table "public"."maps" to "authenticated";

grant truncate on table "public"."maps" to "authenticated";

grant update on table "public"."maps" to "authenticated";

grant delete on table "public"."maps" to "service_role";

grant insert on table "public"."maps" to "service_role";

grant references on table "public"."maps" to "service_role";

grant select on table "public"."maps" to "service_role";

grant trigger on table "public"."maps" to "service_role";

grant truncate on table "public"."maps" to "service_role";

grant update on table "public"."maps" to "service_role";

grant delete on table "public"."mapsets" to "anon";

grant insert on table "public"."mapsets" to "anon";

grant references on table "public"."mapsets" to "anon";

grant select on table "public"."mapsets" to "anon";

grant trigger on table "public"."mapsets" to "anon";

grant truncate on table "public"."mapsets" to "anon";

grant update on table "public"."mapsets" to "anon";

grant delete on table "public"."mapsets" to "authenticated";

grant insert on table "public"."mapsets" to "authenticated";

grant references on table "public"."mapsets" to "authenticated";

grant select on table "public"."mapsets" to "authenticated";

grant trigger on table "public"."mapsets" to "authenticated";

grant truncate on table "public"."mapsets" to "authenticated";

grant update on table "public"."mapsets" to "authenticated";

grant delete on table "public"."mapsets" to "service_role";

grant insert on table "public"."mapsets" to "service_role";

grant references on table "public"."mapsets" to "service_role";

grant select on table "public"."mapsets" to "service_role";

grant trigger on table "public"."mapsets" to "service_role";

grant truncate on table "public"."mapsets" to "service_role";

grant update on table "public"."mapsets" to "service_role";

grant delete on table "public"."match_bans" to "anon";

grant insert on table "public"."match_bans" to "anon";

grant references on table "public"."match_bans" to "anon";

grant select on table "public"."match_bans" to "anon";

grant trigger on table "public"."match_bans" to "anon";

grant truncate on table "public"."match_bans" to "anon";

grant update on table "public"."match_bans" to "anon";

grant delete on table "public"."match_bans" to "authenticated";

grant insert on table "public"."match_bans" to "authenticated";

grant references on table "public"."match_bans" to "authenticated";

grant select on table "public"."match_bans" to "authenticated";

grant trigger on table "public"."match_bans" to "authenticated";

grant truncate on table "public"."match_bans" to "authenticated";

grant update on table "public"."match_bans" to "authenticated";

grant delete on table "public"."match_bans" to "service_role";

grant insert on table "public"."match_bans" to "service_role";

grant references on table "public"."match_bans" to "service_role";

grant select on table "public"."match_bans" to "service_role";

grant trigger on table "public"."match_bans" to "service_role";

grant truncate on table "public"."match_bans" to "service_role";

grant update on table "public"."match_bans" to "service_role";

grant delete on table "public"."match_calendar_events" to "anon";

grant insert on table "public"."match_calendar_events" to "anon";

grant references on table "public"."match_calendar_events" to "anon";

grant select on table "public"."match_calendar_events" to "anon";

grant trigger on table "public"."match_calendar_events" to "anon";

grant truncate on table "public"."match_calendar_events" to "anon";

grant update on table "public"."match_calendar_events" to "anon";

grant delete on table "public"."match_calendar_events" to "authenticated";

grant insert on table "public"."match_calendar_events" to "authenticated";

grant references on table "public"."match_calendar_events" to "authenticated";

grant select on table "public"."match_calendar_events" to "authenticated";

grant trigger on table "public"."match_calendar_events" to "authenticated";

grant truncate on table "public"."match_calendar_events" to "authenticated";

grant update on table "public"."match_calendar_events" to "authenticated";

grant delete on table "public"."match_calendar_events" to "service_role";

grant insert on table "public"."match_calendar_events" to "service_role";

grant references on table "public"."match_calendar_events" to "service_role";

grant select on table "public"."match_calendar_events" to "service_role";

grant trigger on table "public"."match_calendar_events" to "service_role";

grant truncate on table "public"."match_calendar_events" to "service_role";

grant update on table "public"."match_calendar_events" to "service_role";

grant delete on table "public"."match_invites" to "anon";

grant insert on table "public"."match_invites" to "anon";

grant references on table "public"."match_invites" to "anon";

grant select on table "public"."match_invites" to "anon";

grant trigger on table "public"."match_invites" to "anon";

grant truncate on table "public"."match_invites" to "anon";

grant update on table "public"."match_invites" to "anon";

grant delete on table "public"."match_invites" to "authenticated";

grant insert on table "public"."match_invites" to "authenticated";

grant references on table "public"."match_invites" to "authenticated";

grant select on table "public"."match_invites" to "authenticated";

grant trigger on table "public"."match_invites" to "authenticated";

grant truncate on table "public"."match_invites" to "authenticated";

grant update on table "public"."match_invites" to "authenticated";

grant delete on table "public"."match_invites" to "service_role";

grant insert on table "public"."match_invites" to "service_role";

grant references on table "public"."match_invites" to "service_role";

grant select on table "public"."match_invites" to "service_role";

grant trigger on table "public"."match_invites" to "service_role";

grant truncate on table "public"."match_invites" to "service_role";

grant update on table "public"."match_invites" to "service_role";

grant delete on table "public"."match_maps" to "anon";

grant insert on table "public"."match_maps" to "anon";

grant references on table "public"."match_maps" to "anon";

grant select on table "public"."match_maps" to "anon";

grant trigger on table "public"."match_maps" to "anon";

grant truncate on table "public"."match_maps" to "anon";

grant update on table "public"."match_maps" to "anon";

grant delete on table "public"."match_maps" to "authenticated";

grant insert on table "public"."match_maps" to "authenticated";

grant references on table "public"."match_maps" to "authenticated";

grant select on table "public"."match_maps" to "authenticated";

grant trigger on table "public"."match_maps" to "authenticated";

grant truncate on table "public"."match_maps" to "authenticated";

grant update on table "public"."match_maps" to "authenticated";

grant delete on table "public"."match_maps" to "service_role";

grant insert on table "public"."match_maps" to "service_role";

grant references on table "public"."match_maps" to "service_role";

grant select on table "public"."match_maps" to "service_role";

grant trigger on table "public"."match_maps" to "service_role";

grant truncate on table "public"."match_maps" to "service_role";

grant update on table "public"."match_maps" to "service_role";

grant delete on table "public"."match_participant_player_states" to "anon";

grant insert on table "public"."match_participant_player_states" to "anon";

grant references on table "public"."match_participant_player_states" to "anon";

grant select on table "public"."match_participant_player_states" to "anon";

grant trigger on table "public"."match_participant_player_states" to "anon";

grant truncate on table "public"."match_participant_player_states" to "anon";

grant update on table "public"."match_participant_player_states" to "anon";

grant delete on table "public"."match_participant_player_states" to "authenticated";

grant insert on table "public"."match_participant_player_states" to "authenticated";

grant references on table "public"."match_participant_player_states" to "authenticated";

grant select on table "public"."match_participant_player_states" to "authenticated";

grant trigger on table "public"."match_participant_player_states" to "authenticated";

grant truncate on table "public"."match_participant_player_states" to "authenticated";

grant update on table "public"."match_participant_player_states" to "authenticated";

grant delete on table "public"."match_participant_player_states" to "service_role";

grant insert on table "public"."match_participant_player_states" to "service_role";

grant references on table "public"."match_participant_player_states" to "service_role";

grant select on table "public"."match_participant_player_states" to "service_role";

grant trigger on table "public"."match_participant_player_states" to "service_role";

grant truncate on table "public"."match_participant_player_states" to "service_role";

grant update on table "public"."match_participant_player_states" to "service_role";

grant delete on table "public"."match_participant_players" to "anon";

grant insert on table "public"."match_participant_players" to "anon";

grant references on table "public"."match_participant_players" to "anon";

grant select on table "public"."match_participant_players" to "anon";

grant trigger on table "public"."match_participant_players" to "anon";

grant truncate on table "public"."match_participant_players" to "anon";

grant update on table "public"."match_participant_players" to "anon";

grant delete on table "public"."match_participant_players" to "authenticated";

grant insert on table "public"."match_participant_players" to "authenticated";

grant references on table "public"."match_participant_players" to "authenticated";

grant select on table "public"."match_participant_players" to "authenticated";

grant trigger on table "public"."match_participant_players" to "authenticated";

grant truncate on table "public"."match_participant_players" to "authenticated";

grant update on table "public"."match_participant_players" to "authenticated";

grant delete on table "public"."match_participant_players" to "service_role";

grant insert on table "public"."match_participant_players" to "service_role";

grant references on table "public"."match_participant_players" to "service_role";

grant select on table "public"."match_participant_players" to "service_role";

grant trigger on table "public"."match_participant_players" to "service_role";

grant truncate on table "public"."match_participant_players" to "service_role";

grant update on table "public"."match_participant_players" to "service_role";

grant delete on table "public"."match_participants" to "anon";

grant insert on table "public"."match_participants" to "anon";

grant references on table "public"."match_participants" to "anon";

grant select on table "public"."match_participants" to "anon";

grant trigger on table "public"."match_participants" to "anon";

grant truncate on table "public"."match_participants" to "anon";

grant update on table "public"."match_participants" to "anon";

grant delete on table "public"."match_participants" to "authenticated";

grant insert on table "public"."match_participants" to "authenticated";

grant references on table "public"."match_participants" to "authenticated";

grant select on table "public"."match_participants" to "authenticated";

grant trigger on table "public"."match_participants" to "authenticated";

grant truncate on table "public"."match_participants" to "authenticated";

grant update on table "public"."match_participants" to "authenticated";

grant delete on table "public"."match_participants" to "service_role";

grant insert on table "public"."match_participants" to "service_role";

grant references on table "public"."match_participants" to "service_role";

grant select on table "public"."match_participants" to "service_role";

grant trigger on table "public"."match_participants" to "service_role";

grant truncate on table "public"."match_participants" to "service_role";

grant update on table "public"."match_participants" to "service_role";

grant delete on table "public"."match_predictions" to "anon";

grant insert on table "public"."match_predictions" to "anon";

grant references on table "public"."match_predictions" to "anon";

grant select on table "public"."match_predictions" to "anon";

grant trigger on table "public"."match_predictions" to "anon";

grant truncate on table "public"."match_predictions" to "anon";

grant update on table "public"."match_predictions" to "anon";

grant delete on table "public"."match_predictions" to "authenticated";

grant insert on table "public"."match_predictions" to "authenticated";

grant references on table "public"."match_predictions" to "authenticated";

grant select on table "public"."match_predictions" to "authenticated";

grant trigger on table "public"."match_predictions" to "authenticated";

grant truncate on table "public"."match_predictions" to "authenticated";

grant update on table "public"."match_predictions" to "authenticated";

grant delete on table "public"."match_predictions" to "service_role";

grant insert on table "public"."match_predictions" to "service_role";

grant references on table "public"."match_predictions" to "service_role";

grant select on table "public"."match_predictions" to "service_role";

grant trigger on table "public"."match_predictions" to "service_role";

grant truncate on table "public"."match_predictions" to "service_role";

grant update on table "public"."match_predictions" to "service_role";

grant delete on table "public"."match_queue" to "anon";

grant insert on table "public"."match_queue" to "anon";

grant references on table "public"."match_queue" to "anon";

grant select on table "public"."match_queue" to "anon";

grant trigger on table "public"."match_queue" to "anon";

grant truncate on table "public"."match_queue" to "anon";

grant update on table "public"."match_queue" to "anon";

grant delete on table "public"."match_queue" to "authenticated";

grant insert on table "public"."match_queue" to "authenticated";

grant references on table "public"."match_queue" to "authenticated";

grant select on table "public"."match_queue" to "authenticated";

grant trigger on table "public"."match_queue" to "authenticated";

grant truncate on table "public"."match_queue" to "authenticated";

grant update on table "public"."match_queue" to "authenticated";

grant delete on table "public"."match_queue" to "service_role";

grant insert on table "public"."match_queue" to "service_role";

grant references on table "public"."match_queue" to "service_role";

grant select on table "public"."match_queue" to "service_role";

grant trigger on table "public"."match_queue" to "service_role";

grant truncate on table "public"."match_queue" to "service_role";

grant update on table "public"."match_queue" to "service_role";

grant delete on table "public"."matches" to "anon";

grant insert on table "public"."matches" to "anon";

grant references on table "public"."matches" to "anon";

grant select on table "public"."matches" to "anon";

grant trigger on table "public"."matches" to "anon";

grant truncate on table "public"."matches" to "anon";

grant update on table "public"."matches" to "anon";

grant delete on table "public"."matches" to "authenticated";

grant insert on table "public"."matches" to "authenticated";

grant references on table "public"."matches" to "authenticated";

grant select on table "public"."matches" to "authenticated";

grant trigger on table "public"."matches" to "authenticated";

grant truncate on table "public"."matches" to "authenticated";

grant update on table "public"."matches" to "authenticated";

grant delete on table "public"."matches" to "service_role";

grant insert on table "public"."matches" to "service_role";

grant references on table "public"."matches" to "service_role";

grant select on table "public"."matches" to "service_role";

grant trigger on table "public"."matches" to "service_role";

grant truncate on table "public"."matches" to "service_role";

grant update on table "public"."matches" to "service_role";

grant delete on table "public"."messages" to "anon";

grant insert on table "public"."messages" to "anon";

grant references on table "public"."messages" to "anon";

grant select on table "public"."messages" to "anon";

grant trigger on table "public"."messages" to "anon";

grant truncate on table "public"."messages" to "anon";

grant update on table "public"."messages" to "anon";

grant delete on table "public"."messages" to "authenticated";

grant insert on table "public"."messages" to "authenticated";

grant references on table "public"."messages" to "authenticated";

grant select on table "public"."messages" to "authenticated";

grant trigger on table "public"."messages" to "authenticated";

grant truncate on table "public"."messages" to "authenticated";

grant update on table "public"."messages" to "authenticated";

grant delete on table "public"."messages" to "service_role";

grant insert on table "public"."messages" to "service_role";

grant references on table "public"."messages" to "service_role";

grant select on table "public"."messages" to "service_role";

grant trigger on table "public"."messages" to "service_role";

grant truncate on table "public"."messages" to "service_role";

grant update on table "public"."messages" to "service_role";

grant delete on table "public"."mods" to "anon";

grant insert on table "public"."mods" to "anon";

grant references on table "public"."mods" to "anon";

grant select on table "public"."mods" to "anon";

grant trigger on table "public"."mods" to "anon";

grant truncate on table "public"."mods" to "anon";

grant update on table "public"."mods" to "anon";

grant delete on table "public"."mods" to "authenticated";

grant insert on table "public"."mods" to "authenticated";

grant references on table "public"."mods" to "authenticated";

grant select on table "public"."mods" to "authenticated";

grant trigger on table "public"."mods" to "authenticated";

grant truncate on table "public"."mods" to "authenticated";

grant update on table "public"."mods" to "authenticated";

grant delete on table "public"."mods" to "service_role";

grant insert on table "public"."mods" to "service_role";

grant references on table "public"."mods" to "service_role";

grant select on table "public"."mods" to "service_role";

grant trigger on table "public"."mods" to "service_role";

grant truncate on table "public"."mods" to "service_role";

grant update on table "public"."mods" to "service_role";

grant delete on table "public"."notifications" to "anon";

grant insert on table "public"."notifications" to "anon";

grant references on table "public"."notifications" to "anon";

grant select on table "public"."notifications" to "anon";

grant trigger on table "public"."notifications" to "anon";

grant truncate on table "public"."notifications" to "anon";

grant update on table "public"."notifications" to "anon";

grant delete on table "public"."notifications" to "authenticated";

grant insert on table "public"."notifications" to "authenticated";

grant references on table "public"."notifications" to "authenticated";

grant select on table "public"."notifications" to "authenticated";

grant trigger on table "public"."notifications" to "authenticated";

grant truncate on table "public"."notifications" to "authenticated";

grant update on table "public"."notifications" to "authenticated";

grant delete on table "public"."notifications" to "service_role";

grant insert on table "public"."notifications" to "service_role";

grant references on table "public"."notifications" to "service_role";

grant select on table "public"."notifications" to "service_role";

grant trigger on table "public"."notifications" to "service_role";

grant truncate on table "public"."notifications" to "service_role";

grant update on table "public"."notifications" to "service_role";

grant delete on table "public"."organisation_followers" to "anon";

grant insert on table "public"."organisation_followers" to "anon";

grant references on table "public"."organisation_followers" to "anon";

grant select on table "public"."organisation_followers" to "anon";

grant trigger on table "public"."organisation_followers" to "anon";

grant truncate on table "public"."organisation_followers" to "anon";

grant update on table "public"."organisation_followers" to "anon";

grant delete on table "public"."organisation_followers" to "authenticated";

grant insert on table "public"."organisation_followers" to "authenticated";

grant references on table "public"."organisation_followers" to "authenticated";

grant select on table "public"."organisation_followers" to "authenticated";

grant trigger on table "public"."organisation_followers" to "authenticated";

grant truncate on table "public"."organisation_followers" to "authenticated";

grant update on table "public"."organisation_followers" to "authenticated";

grant delete on table "public"."organisation_followers" to "service_role";

grant insert on table "public"."organisation_followers" to "service_role";

grant references on table "public"."organisation_followers" to "service_role";

grant select on table "public"."organisation_followers" to "service_role";

grant trigger on table "public"."organisation_followers" to "service_role";

grant truncate on table "public"."organisation_followers" to "service_role";

grant update on table "public"."organisation_followers" to "service_role";

grant delete on table "public"."organisation_member_roles" to "anon";

grant insert on table "public"."organisation_member_roles" to "anon";

grant references on table "public"."organisation_member_roles" to "anon";

grant select on table "public"."organisation_member_roles" to "anon";

grant trigger on table "public"."organisation_member_roles" to "anon";

grant truncate on table "public"."organisation_member_roles" to "anon";

grant update on table "public"."organisation_member_roles" to "anon";

grant delete on table "public"."organisation_member_roles" to "authenticated";

grant insert on table "public"."organisation_member_roles" to "authenticated";

grant references on table "public"."organisation_member_roles" to "authenticated";

grant select on table "public"."organisation_member_roles" to "authenticated";

grant trigger on table "public"."organisation_member_roles" to "authenticated";

grant truncate on table "public"."organisation_member_roles" to "authenticated";

grant update on table "public"."organisation_member_roles" to "authenticated";

grant delete on table "public"."organisation_member_roles" to "service_role";

grant insert on table "public"."organisation_member_roles" to "service_role";

grant references on table "public"."organisation_member_roles" to "service_role";

grant select on table "public"."organisation_member_roles" to "service_role";

grant trigger on table "public"."organisation_member_roles" to "service_role";

grant truncate on table "public"."organisation_member_roles" to "service_role";

grant update on table "public"."organisation_member_roles" to "service_role";

grant delete on table "public"."organisation_members" to "anon";

grant insert on table "public"."organisation_members" to "anon";

grant references on table "public"."organisation_members" to "anon";

grant select on table "public"."organisation_members" to "anon";

grant trigger on table "public"."organisation_members" to "anon";

grant truncate on table "public"."organisation_members" to "anon";

grant update on table "public"."organisation_members" to "anon";

grant delete on table "public"."organisation_members" to "authenticated";

grant insert on table "public"."organisation_members" to "authenticated";

grant references on table "public"."organisation_members" to "authenticated";

grant select on table "public"."organisation_members" to "authenticated";

grant trigger on table "public"."organisation_members" to "authenticated";

grant truncate on table "public"."organisation_members" to "authenticated";

grant update on table "public"."organisation_members" to "authenticated";

grant delete on table "public"."organisation_members" to "service_role";

grant insert on table "public"."organisation_members" to "service_role";

grant references on table "public"."organisation_members" to "service_role";

grant select on table "public"."organisation_members" to "service_role";

grant trigger on table "public"."organisation_members" to "service_role";

grant truncate on table "public"."organisation_members" to "service_role";

grant update on table "public"."organisation_members" to "service_role";

grant delete on table "public"."organisation_roles" to "anon";

grant insert on table "public"."organisation_roles" to "anon";

grant references on table "public"."organisation_roles" to "anon";

grant select on table "public"."organisation_roles" to "anon";

grant trigger on table "public"."organisation_roles" to "anon";

grant truncate on table "public"."organisation_roles" to "anon";

grant update on table "public"."organisation_roles" to "anon";

grant delete on table "public"."organisation_roles" to "authenticated";

grant insert on table "public"."organisation_roles" to "authenticated";

grant references on table "public"."organisation_roles" to "authenticated";

grant select on table "public"."organisation_roles" to "authenticated";

grant trigger on table "public"."organisation_roles" to "authenticated";

grant truncate on table "public"."organisation_roles" to "authenticated";

grant update on table "public"."organisation_roles" to "authenticated";

grant delete on table "public"."organisation_roles" to "service_role";

grant insert on table "public"."organisation_roles" to "service_role";

grant references on table "public"."organisation_roles" to "service_role";

grant select on table "public"."organisation_roles" to "service_role";

grant trigger on table "public"."organisation_roles" to "service_role";

grant truncate on table "public"."organisation_roles" to "service_role";

grant update on table "public"."organisation_roles" to "service_role";

grant delete on table "public"."organisations" to "anon";

grant insert on table "public"."organisations" to "anon";

grant references on table "public"."organisations" to "anon";

grant select on table "public"."organisations" to "anon";

grant trigger on table "public"."organisations" to "anon";

grant truncate on table "public"."organisations" to "anon";

grant update on table "public"."organisations" to "anon";

grant delete on table "public"."organisations" to "authenticated";

grant insert on table "public"."organisations" to "authenticated";

grant references on table "public"."organisations" to "authenticated";

grant select on table "public"."organisations" to "authenticated";

grant trigger on table "public"."organisations" to "authenticated";

grant truncate on table "public"."organisations" to "authenticated";

grant update on table "public"."organisations" to "authenticated";

grant delete on table "public"."organisations" to "service_role";

grant insert on table "public"."organisations" to "service_role";

grant references on table "public"."organisations" to "service_role";

grant select on table "public"."organisations" to "service_role";

grant trigger on table "public"."organisations" to "service_role";

grant truncate on table "public"."organisations" to "service_role";

grant update on table "public"."organisations" to "service_role";

grant delete on table "public"."participant_disqualification" to "anon";

grant insert on table "public"."participant_disqualification" to "anon";

grant references on table "public"."participant_disqualification" to "anon";

grant select on table "public"."participant_disqualification" to "anon";

grant trigger on table "public"."participant_disqualification" to "anon";

grant truncate on table "public"."participant_disqualification" to "anon";

grant update on table "public"."participant_disqualification" to "anon";

grant delete on table "public"."participant_disqualification" to "authenticated";

grant insert on table "public"."participant_disqualification" to "authenticated";

grant references on table "public"."participant_disqualification" to "authenticated";

grant select on table "public"."participant_disqualification" to "authenticated";

grant trigger on table "public"."participant_disqualification" to "authenticated";

grant truncate on table "public"."participant_disqualification" to "authenticated";

grant update on table "public"."participant_disqualification" to "authenticated";

grant delete on table "public"."participant_disqualification" to "service_role";

grant insert on table "public"."participant_disqualification" to "service_role";

grant references on table "public"."participant_disqualification" to "service_role";

grant select on table "public"."participant_disqualification" to "service_role";

grant trigger on table "public"."participant_disqualification" to "service_role";

grant truncate on table "public"."participant_disqualification" to "service_role";

grant update on table "public"."participant_disqualification" to "service_role";

grant delete on table "public"."participants" to "anon";

grant insert on table "public"."participants" to "anon";

grant references on table "public"."participants" to "anon";

grant select on table "public"."participants" to "anon";

grant trigger on table "public"."participants" to "anon";

grant truncate on table "public"."participants" to "anon";

grant update on table "public"."participants" to "anon";

grant delete on table "public"."participants" to "authenticated";

grant insert on table "public"."participants" to "authenticated";

grant references on table "public"."participants" to "authenticated";

grant select on table "public"."participants" to "authenticated";

grant trigger on table "public"."participants" to "authenticated";

grant truncate on table "public"."participants" to "authenticated";

grant update on table "public"."participants" to "authenticated";

grant delete on table "public"."participants" to "service_role";

grant insert on table "public"."participants" to "service_role";

grant references on table "public"."participants" to "service_role";

grant select on table "public"."participants" to "service_role";

grant trigger on table "public"."participants" to "service_role";

grant truncate on table "public"."participants" to "service_role";

grant update on table "public"."participants" to "service_role";

grant delete on table "public"."pinned_scores" to "anon";

grant insert on table "public"."pinned_scores" to "anon";

grant references on table "public"."pinned_scores" to "anon";

grant select on table "public"."pinned_scores" to "anon";

grant trigger on table "public"."pinned_scores" to "anon";

grant truncate on table "public"."pinned_scores" to "anon";

grant update on table "public"."pinned_scores" to "anon";

grant delete on table "public"."pinned_scores" to "authenticated";

grant insert on table "public"."pinned_scores" to "authenticated";

grant references on table "public"."pinned_scores" to "authenticated";

grant select on table "public"."pinned_scores" to "authenticated";

grant trigger on table "public"."pinned_scores" to "authenticated";

grant truncate on table "public"."pinned_scores" to "authenticated";

grant update on table "public"."pinned_scores" to "authenticated";

grant delete on table "public"."pinned_scores" to "service_role";

grant insert on table "public"."pinned_scores" to "service_role";

grant references on table "public"."pinned_scores" to "service_role";

grant select on table "public"."pinned_scores" to "service_role";

grant trigger on table "public"."pinned_scores" to "service_role";

grant truncate on table "public"."pinned_scores" to "service_role";

grant update on table "public"."pinned_scores" to "service_role";

grant delete on table "public"."platforms" to "anon";

grant insert on table "public"."platforms" to "anon";

grant references on table "public"."platforms" to "anon";

grant select on table "public"."platforms" to "anon";

grant trigger on table "public"."platforms" to "anon";

grant truncate on table "public"."platforms" to "anon";

grant update on table "public"."platforms" to "anon";

grant delete on table "public"."platforms" to "authenticated";

grant insert on table "public"."platforms" to "authenticated";

grant references on table "public"."platforms" to "authenticated";

grant select on table "public"."platforms" to "authenticated";

grant trigger on table "public"."platforms" to "authenticated";

grant truncate on table "public"."platforms" to "authenticated";

grant update on table "public"."platforms" to "authenticated";

grant delete on table "public"."platforms" to "service_role";

grant insert on table "public"."platforms" to "service_role";

grant references on table "public"."platforms" to "service_role";

grant select on table "public"."platforms" to "service_role";

grant trigger on table "public"."platforms" to "service_role";

grant truncate on table "public"."platforms" to "service_role";

grant update on table "public"."platforms" to "service_role";

grant delete on table "public"."purchases" to "anon";

grant insert on table "public"."purchases" to "anon";

grant references on table "public"."purchases" to "anon";

grant select on table "public"."purchases" to "anon";

grant trigger on table "public"."purchases" to "anon";

grant truncate on table "public"."purchases" to "anon";

grant update on table "public"."purchases" to "anon";

grant delete on table "public"."purchases" to "authenticated";

grant insert on table "public"."purchases" to "authenticated";

grant references on table "public"."purchases" to "authenticated";

grant select on table "public"."purchases" to "authenticated";

grant trigger on table "public"."purchases" to "authenticated";

grant truncate on table "public"."purchases" to "authenticated";

grant update on table "public"."purchases" to "authenticated";

grant delete on table "public"."purchases" to "service_role";

grant insert on table "public"."purchases" to "service_role";

grant references on table "public"."purchases" to "service_role";

grant select on table "public"."purchases" to "service_role";

grant trigger on table "public"."purchases" to "service_role";

grant truncate on table "public"."purchases" to "service_role";

grant update on table "public"."purchases" to "service_role";

grant delete on table "public"."quick_queue" to "anon";

grant insert on table "public"."quick_queue" to "anon";

grant references on table "public"."quick_queue" to "anon";

grant select on table "public"."quick_queue" to "anon";

grant trigger on table "public"."quick_queue" to "anon";

grant truncate on table "public"."quick_queue" to "anon";

grant update on table "public"."quick_queue" to "anon";

grant delete on table "public"."quick_queue" to "authenticated";

grant insert on table "public"."quick_queue" to "authenticated";

grant references on table "public"."quick_queue" to "authenticated";

grant select on table "public"."quick_queue" to "authenticated";

grant trigger on table "public"."quick_queue" to "authenticated";

grant truncate on table "public"."quick_queue" to "authenticated";

grant update on table "public"."quick_queue" to "authenticated";

grant delete on table "public"."quick_queue" to "service_role";

grant insert on table "public"."quick_queue" to "service_role";

grant references on table "public"."quick_queue" to "service_role";

grant select on table "public"."quick_queue" to "service_role";

grant trigger on table "public"."quick_queue" to "service_role";

grant truncate on table "public"."quick_queue" to "service_role";

grant update on table "public"."quick_queue" to "service_role";

grant delete on table "public"."rounds" to "anon";

grant insert on table "public"."rounds" to "anon";

grant references on table "public"."rounds" to "anon";

grant select on table "public"."rounds" to "anon";

grant trigger on table "public"."rounds" to "anon";

grant truncate on table "public"."rounds" to "anon";

grant update on table "public"."rounds" to "anon";

grant delete on table "public"."rounds" to "authenticated";

grant insert on table "public"."rounds" to "authenticated";

grant references on table "public"."rounds" to "authenticated";

grant select on table "public"."rounds" to "authenticated";

grant trigger on table "public"."rounds" to "authenticated";

grant truncate on table "public"."rounds" to "authenticated";

grant update on table "public"."rounds" to "authenticated";

grant delete on table "public"."rounds" to "service_role";

grant insert on table "public"."rounds" to "service_role";

grant references on table "public"."rounds" to "service_role";

grant select on table "public"."rounds" to "service_role";

grant trigger on table "public"."rounds" to "service_role";

grant truncate on table "public"."rounds" to "service_role";

grant update on table "public"."rounds" to "service_role";

grant delete on table "public"."scores" to "anon";

grant insert on table "public"."scores" to "anon";

grant references on table "public"."scores" to "anon";

grant select on table "public"."scores" to "anon";

grant trigger on table "public"."scores" to "anon";

grant truncate on table "public"."scores" to "anon";

grant update on table "public"."scores" to "anon";

grant delete on table "public"."scores" to "authenticated";

grant insert on table "public"."scores" to "authenticated";

grant references on table "public"."scores" to "authenticated";

grant select on table "public"."scores" to "authenticated";

grant trigger on table "public"."scores" to "authenticated";

grant truncate on table "public"."scores" to "authenticated";

grant update on table "public"."scores" to "authenticated";

grant delete on table "public"."scores" to "service_role";

grant insert on table "public"."scores" to "service_role";

grant references on table "public"."scores" to "service_role";

grant select on table "public"."scores" to "service_role";

grant trigger on table "public"."scores" to "service_role";

grant truncate on table "public"."scores" to "service_role";

grant update on table "public"."scores" to "service_role";

grant delete on table "public"."spectators" to "anon";

grant insert on table "public"."spectators" to "anon";

grant references on table "public"."spectators" to "anon";

grant select on table "public"."spectators" to "anon";

grant trigger on table "public"."spectators" to "anon";

grant truncate on table "public"."spectators" to "anon";

grant update on table "public"."spectators" to "anon";

grant delete on table "public"."spectators" to "authenticated";

grant insert on table "public"."spectators" to "authenticated";

grant references on table "public"."spectators" to "authenticated";

grant select on table "public"."spectators" to "authenticated";

grant trigger on table "public"."spectators" to "authenticated";

grant truncate on table "public"."spectators" to "authenticated";

grant update on table "public"."spectators" to "authenticated";

grant delete on table "public"."spectators" to "service_role";

grant insert on table "public"."spectators" to "service_role";

grant references on table "public"."spectators" to "service_role";

grant select on table "public"."spectators" to "service_role";

grant trigger on table "public"."spectators" to "service_role";

grant truncate on table "public"."spectators" to "service_role";

grant update on table "public"."spectators" to "service_role";

grant delete on table "public"."team_members" to "anon";

grant insert on table "public"."team_members" to "anon";

grant references on table "public"."team_members" to "anon";

grant select on table "public"."team_members" to "anon";

grant trigger on table "public"."team_members" to "anon";

grant truncate on table "public"."team_members" to "anon";

grant update on table "public"."team_members" to "anon";

grant delete on table "public"."team_members" to "authenticated";

grant insert on table "public"."team_members" to "authenticated";

grant references on table "public"."team_members" to "authenticated";

grant select on table "public"."team_members" to "authenticated";

grant trigger on table "public"."team_members" to "authenticated";

grant truncate on table "public"."team_members" to "authenticated";

grant update on table "public"."team_members" to "authenticated";

grant delete on table "public"."team_members" to "service_role";

grant insert on table "public"."team_members" to "service_role";

grant references on table "public"."team_members" to "service_role";

grant select on table "public"."team_members" to "service_role";

grant trigger on table "public"."team_members" to "service_role";

grant truncate on table "public"."team_members" to "service_role";

grant update on table "public"."team_members" to "service_role";

grant delete on table "public"."teams" to "anon";

grant insert on table "public"."teams" to "anon";

grant references on table "public"."teams" to "anon";

grant select on table "public"."teams" to "anon";

grant trigger on table "public"."teams" to "anon";

grant truncate on table "public"."teams" to "anon";

grant update on table "public"."teams" to "anon";

grant delete on table "public"."teams" to "authenticated";

grant insert on table "public"."teams" to "authenticated";

grant references on table "public"."teams" to "authenticated";

grant select on table "public"."teams" to "authenticated";

grant trigger on table "public"."teams" to "authenticated";

grant truncate on table "public"."teams" to "authenticated";

grant update on table "public"."teams" to "authenticated";

grant delete on table "public"."teams" to "service_role";

grant insert on table "public"."teams" to "service_role";

grant references on table "public"."teams" to "service_role";

grant select on table "public"."teams" to "service_role";

grant trigger on table "public"."teams" to "service_role";

grant truncate on table "public"."teams" to "service_role";

grant update on table "public"."teams" to "service_role";

grant delete on table "public"."user_badges" to "anon";

grant insert on table "public"."user_badges" to "anon";

grant references on table "public"."user_badges" to "anon";

grant select on table "public"."user_badges" to "anon";

grant trigger on table "public"."user_badges" to "anon";

grant truncate on table "public"."user_badges" to "anon";

grant update on table "public"."user_badges" to "anon";

grant delete on table "public"."user_badges" to "authenticated";

grant insert on table "public"."user_badges" to "authenticated";

grant references on table "public"."user_badges" to "authenticated";

grant select on table "public"."user_badges" to "authenticated";

grant trigger on table "public"."user_badges" to "authenticated";

grant truncate on table "public"."user_badges" to "authenticated";

grant update on table "public"."user_badges" to "authenticated";

grant delete on table "public"."user_badges" to "service_role";

grant insert on table "public"."user_badges" to "service_role";

grant references on table "public"."user_badges" to "service_role";

grant select on table "public"."user_badges" to "service_role";

grant trigger on table "public"."user_badges" to "service_role";

grant truncate on table "public"."user_badges" to "service_role";

grant update on table "public"."user_badges" to "service_role";

grant delete on table "public"."user_followers" to "anon";

grant insert on table "public"."user_followers" to "anon";

grant references on table "public"."user_followers" to "anon";

grant select on table "public"."user_followers" to "anon";

grant trigger on table "public"."user_followers" to "anon";

grant truncate on table "public"."user_followers" to "anon";

grant update on table "public"."user_followers" to "anon";

grant delete on table "public"."user_followers" to "authenticated";

grant insert on table "public"."user_followers" to "authenticated";

grant references on table "public"."user_followers" to "authenticated";

grant select on table "public"."user_followers" to "authenticated";

grant trigger on table "public"."user_followers" to "authenticated";

grant truncate on table "public"."user_followers" to "authenticated";

grant update on table "public"."user_followers" to "authenticated";

grant delete on table "public"."user_followers" to "service_role";

grant insert on table "public"."user_followers" to "service_role";

grant references on table "public"."user_followers" to "service_role";

grant select on table "public"."user_followers" to "service_role";

grant trigger on table "public"."user_followers" to "service_role";

grant truncate on table "public"."user_followers" to "service_role";

grant update on table "public"."user_followers" to "service_role";

grant delete on table "public"."user_platforms" to "anon";

grant insert on table "public"."user_platforms" to "anon";

grant references on table "public"."user_platforms" to "anon";

grant select on table "public"."user_platforms" to "anon";

grant trigger on table "public"."user_platforms" to "anon";

grant truncate on table "public"."user_platforms" to "anon";

grant update on table "public"."user_platforms" to "anon";

grant delete on table "public"."user_platforms" to "authenticated";

grant insert on table "public"."user_platforms" to "authenticated";

grant references on table "public"."user_platforms" to "authenticated";

grant select on table "public"."user_platforms" to "authenticated";

grant trigger on table "public"."user_platforms" to "authenticated";

grant truncate on table "public"."user_platforms" to "authenticated";

grant update on table "public"."user_platforms" to "authenticated";

grant delete on table "public"."user_platforms" to "service_role";

grant insert on table "public"."user_platforms" to "service_role";

grant references on table "public"."user_platforms" to "service_role";

grant select on table "public"."user_platforms" to "service_role";

grant trigger on table "public"."user_platforms" to "service_role";

grant truncate on table "public"."user_platforms" to "service_role";

grant update on table "public"."user_platforms" to "service_role";

grant delete on table "public"."user_prizes" to "anon";

grant insert on table "public"."user_prizes" to "anon";

grant references on table "public"."user_prizes" to "anon";

grant select on table "public"."user_prizes" to "anon";

grant trigger on table "public"."user_prizes" to "anon";

grant truncate on table "public"."user_prizes" to "anon";

grant update on table "public"."user_prizes" to "anon";

grant delete on table "public"."user_prizes" to "authenticated";

grant insert on table "public"."user_prizes" to "authenticated";

grant references on table "public"."user_prizes" to "authenticated";

grant select on table "public"."user_prizes" to "authenticated";

grant trigger on table "public"."user_prizes" to "authenticated";

grant truncate on table "public"."user_prizes" to "authenticated";

grant update on table "public"."user_prizes" to "authenticated";

grant delete on table "public"."user_prizes" to "service_role";

grant insert on table "public"."user_prizes" to "service_role";

grant references on table "public"."user_prizes" to "service_role";

grant select on table "public"."user_prizes" to "service_role";

grant trigger on table "public"."user_prizes" to "service_role";

grant truncate on table "public"."user_prizes" to "service_role";

grant update on table "public"."user_prizes" to "service_role";

grant delete on table "public"."user_profiles" to "anon";

grant insert on table "public"."user_profiles" to "anon";

grant references on table "public"."user_profiles" to "anon";

grant select on table "public"."user_profiles" to "anon";

grant trigger on table "public"."user_profiles" to "anon";

grant truncate on table "public"."user_profiles" to "anon";

grant update on table "public"."user_profiles" to "anon";

grant delete on table "public"."user_profiles" to "authenticated";

grant insert on table "public"."user_profiles" to "authenticated";

grant references on table "public"."user_profiles" to "authenticated";

grant select on table "public"."user_profiles" to "authenticated";

grant trigger on table "public"."user_profiles" to "authenticated";

grant truncate on table "public"."user_profiles" to "authenticated";

grant update on table "public"."user_profiles" to "authenticated";

grant delete on table "public"."user_profiles" to "service_role";

grant insert on table "public"."user_profiles" to "service_role";

grant references on table "public"."user_profiles" to "service_role";

grant select on table "public"."user_profiles" to "service_role";

grant trigger on table "public"."user_profiles" to "service_role";

grant truncate on table "public"."user_profiles" to "service_role";

grant update on table "public"."user_profiles" to "service_role";

grant delete on table "public"."user_ratings" to "anon";

grant insert on table "public"."user_ratings" to "anon";

grant references on table "public"."user_ratings" to "anon";

grant select on table "public"."user_ratings" to "anon";

grant trigger on table "public"."user_ratings" to "anon";

grant truncate on table "public"."user_ratings" to "anon";

grant update on table "public"."user_ratings" to "anon";

grant delete on table "public"."user_ratings" to "authenticated";

grant insert on table "public"."user_ratings" to "authenticated";

grant references on table "public"."user_ratings" to "authenticated";

grant select on table "public"."user_ratings" to "authenticated";

grant trigger on table "public"."user_ratings" to "authenticated";

grant truncate on table "public"."user_ratings" to "authenticated";

grant update on table "public"."user_ratings" to "authenticated";

grant delete on table "public"."user_ratings" to "service_role";

grant insert on table "public"."user_ratings" to "service_role";

grant references on table "public"."user_ratings" to "service_role";

grant select on table "public"."user_ratings" to "service_role";

grant trigger on table "public"."user_ratings" to "service_role";

grant truncate on table "public"."user_ratings" to "service_role";

grant update on table "public"."user_ratings" to "service_role";

create policy "Enable read access for all users"
on "public"."badges"
as permissive
for select
to public
using (true);


create policy "Auth can delete"
on "public"."event_groups"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."event_groups"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."event_groups"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."event_links"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."event_options"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."event_options"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."event_statuses"
as permissive
for select
to public
using (true);


create policy "Enable insert for all ausers"
on "public"."events"
as permissive
for insert
to public
with check (true);


create policy "Enable read access for all users"
on "public"."events"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."games"
as permissive
for select
to public
using (true);


create policy "Enable delete for authenticated users only"
on "public"."map_pool_map_mods"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."map_pool_map_mods"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."map_pool_map_mods"
as permissive
for select
to public
using (true);


create policy "Auth can delete"
on "public"."map_pool_maps"
as permissive
for delete
to authenticated
using (true);


create policy "Auth can update"
on "public"."map_pool_maps"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."map_pool_maps"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."map_pool_maps"
as permissive
for select
to public
using (true);


create policy "Authenticated can insert"
on "public"."map_pools"
as permissive
for insert
to authenticated
with check (true);


create policy "Authenticated can update"
on "public"."map_pools"
as permissive
for update
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."map_pools"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."maps"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."maps"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."mapsets"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."mapsets"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_bans"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_bans"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."match_bans"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_calendar_events"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_calendar_events"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_invites"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable select for authenticated users only"
on "public"."match_invites"
as permissive
for select
to authenticated
using (true);


create policy "Enable delete for authenticated users only"
on "public"."match_maps"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_maps"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_maps"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."match_maps"
as permissive
for update
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."match_participant_player_states"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_participant_players"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_participant_players"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."match_participant_players"
as permissive
for update
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_participants"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_participants"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."match_participants"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_predictions"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_predictions"
as permissive
for select
to public
using (true);


create policy "Enable delete for authenticated users only"
on "public"."match_queue"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."match_queue"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."match_queue"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."matches"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."matches"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."matches"
as permissive
for update
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."mods"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."mods"
as permissive
for select
to public
using (true);


create policy "Auth can update"
on "public"."notifications"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."notifications"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."notifications"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."organisation_followers"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."organisation_member_roles"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."organisation_members"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."organisation_roles"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."organisations"
as permissive
for select
to public
using (true);


create policy "Auth can select"
on "public"."participant_disqualification"
as permissive
for select
to anon
using (true);


create policy "Enable insert for authenticated users only"
on "public"."participant_disqualification"
as permissive
for insert
to authenticated
with check (true);


create policy "Auth can update"
on "public"."participants"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."participants"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."participants"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."platforms"
as permissive
for select
to public
using (true);


create policy "Enable delete for authenticated users only"
on "public"."quick_queue"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."quick_queue"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."quick_queue"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."quick_queue"
as permissive
for update
to authenticated
using (true);


create policy "Enable delete for authenticated users only"
on "public"."rounds"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."rounds"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."rounds"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."rounds"
as permissive
for update
to authenticated
using (true);


create policy "Enable delete for authenticated users only"
on "public"."scores"
as permissive
for delete
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."scores"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."scores"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."scores"
as permissive
for update
to public
using (true);


create policy "Enable read access for all users"
on "public"."spectators"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."team_members"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."team_members"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."team_members"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."teams"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."teams"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."teams"
as permissive
for update
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."user_badges"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."user_followers"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."user_platforms"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."user_platforms"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."user_platforms"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for all users"
on "public"."user_profiles"
as permissive
for insert
to public
with check (true);


create policy "Enable update for authenticated users only"
on "public"."user_profiles"
as permissive
for update
to authenticated
using (true);


create policy "Read for everyone"
on "public"."user_profiles"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."user_ratings"
as permissive
for select
to public
using (true);



